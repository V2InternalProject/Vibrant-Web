@model HRMS.Models.EmployeeDisciplinaryDetailsViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script language="javascript">
    $.ajaxSetup({
        // Disable caching of AJAX responses
        cache: false
    });
    $(document).ready(function () {
        $('#frmAddEmployeeDisciplines #AddedDate').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: '2000:c', maxDate: new Date, showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true });
        $("#frmAddEmployeeDisciplines #Manager").autocomplete({
            source: function (request, response) {
                $.getJSON('@Url.Action("SearchEmployeeAutoSuggest", "EmployeeDetails")', { term: request.term }, function (data) {

                    response($.map(data, function (el) {

                        var emplyeeInformation = el.EmployeeName;
                        return {

                            label: emplyeeInformation,
                            value: el.EmployeeName
                        };

                    }));
                });
            }
        });
    });
</script>
@using (Html.BeginForm("AddEmployeeDisciplines", "EmployeeDetails", FormMethod.Post, new { id = "frmAddEmployeeDisciplines" }))
{
    @Html.HiddenFor(model => model.EmployeeId, new { @id = "hdnAddDisciplineDetailsEmployeeId" })
    @Html.HiddenFor(model => model.ManagerId, new { @id = "hdnAddDisciplineDetailsManagerId" })
    @Html.HiddenFor(model => model.DisciplineId, new { @id = "hdnAddDisciplineDetailsDisciplineId" })
    <div class="mrgnT25 NoNegMrgnContainer">
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.LabelFor(model => model.DisciplineSubject):
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.EditorFor(model => model.DisciplineSubject)
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.DisciplineSubject)</p>
                @Html.HiddenFor(model => model.DisciplineSubject, new { @id = "disciplineSubject" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> Action date:
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(model => model.AddedDate, string.Format("{0: MM/dd/yyyy}", Model.AddedDate), new { @readonly = "readonly" })
                <p class="qualif-detail">
                    @Html.ValidationMessageFor(model => model.AddedDate)</p>
                @Html.HiddenFor(model => model.AddedDate, new { @id = "addedDate" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.LabelFor(model => model.Manager):
            </div>
            <div class="editor-field fieldwidth floatL ">
              @*    @Html.EditorFor(model => model.Manager, new { @id = "Manager" })*@
                @Html.DropDownListFor(model => model.Manager, new SelectList(Model.EmployeeManagerList, "EmployeeId", "EmployeeName", "Select"), "Select")
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.Manager)</p>
                @Html.HiddenFor(model => model.Manager, new { @id = "manager" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.LabelFor(model => model.DisciplineMessage):
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextAreaFor(model => model.DisciplineMessage, new { @id = "DisciplineMessage" })
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.DisciplineMessage)</p>
                @Html.HiddenFor(model => model.DisciplineMessage, new { @id = "disciplineMessage" })
            </div>
        </div>
    </div>
    <div class="clear popup_button ">
        <div class="floatR">
            <input type="button" value="Save" id="btnSaveDisciplinaryDetails" class="button mrgnR5" />
            <input id="cancel" type="button" value="Reset" class="button " />
        </div>
    </div>
}
<div id="disciplineDetailsSuccessDialog" title="Discipline Details" style="display: none">
    <p>
        Discipline Details have been saved.</p>
</div>
<div id="disciplineDetailsErrorDialog" title="Error" style="display: none">
    <p>
        There are some errors.</p>
</div>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $('#cancel').click(function () {
            emptyDialog();
        });
        var postUrl = '@Url.Action("AddUpdateEmployeeDisciplines", "EmployeeDetails")';
        $('#btnSaveDisciplinaryDetails').click(function () {
            if ($('#frmAddEmployeeDisciplines').valid()) {
                DisplayLoadingDialog();  //checked
                $.ajax({
                    url: postUrl,
                    type: 'POST',
                    data: $('#frmAddEmployeeDisciplines').serialize(),
                    success: function (results) {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        if (results == true) {
                            $('#AddDiscipline').dialog("close");
                            jQuery("#disciplinedetailsjqTable").trigger("reloadGrid");
                            $("#disciplineDetailsSuccessDialog").dialog({
                                resizable: false,
                                height: 140,
                                width: 300,
                                title: 'Discipline Details',
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                    }
                                },
                                close: function () {
                                    $(".field-validation-error").empty();
                                    $('input').removeClass("input-validation-error");
                                }

                            });
                        }
                        else {
                            $("#disciplineDetailsErrorDialog").dialog({
                                resizable: false,
                                height: 140,
                                width: 300,
                                title: 'Discipline Details',
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                    }
                                }
                            });
                        }
                    }
                });
            }
            return false;
        });
    });
    var emptyDialog = function () {
        $(".field-validation-error").empty();
        $('input').removeClass("input-validation-error");
        $("#DisciplineSubject").val($("#disciplineSubject").val())
        $("#AddedDate").val($("#addedDate").val())
        $("#Manager").val($("#manager").val())
        $("#DisciplineMessage").val($("#disciplineMessage").val())
    }
</script>