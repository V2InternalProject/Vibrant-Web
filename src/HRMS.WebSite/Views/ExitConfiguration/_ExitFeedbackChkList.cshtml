@model HRMS.Models.exitFeedbackChecklistVM
@{
    ViewBag.Title = "Index";
}
@*@section HeaderLinks{
    @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
}*@
<div class="clearfix">
    <h3 class="floatL popup-head">
        Select Exit Feedback CheckList
    </h3>
    <div class="confiremations-tot mrgnT5 floatR mrgnR23">
        <input class="ButtonGray" type="button" id="btnSaveFeedback" value="Select" /><span>
        </span>
        <input class="ButtonGray" type="button" id="btnClose" value="Close" />
    </div>
</div>
<table cellpadding="0" cellspacing="0" border="0" width="100%" class="PerformanceHinderTable TableJqgrid">
        <thead>
            <tr>
                <th class="tableHeaders" width="10%">
                    Role
                </th>
                <th class="tableHeaders" width="15%">
                    Name
                </th>
                <th class="tableHeaders" width="15%">
                    Checklist
                </th>
                <th class="tableHeaders" width="15%">
                    Select
                </th>
            </tr>
        </thead>
        <div id="DeliveryTeam">
            @foreach (var item in Model.feedbackChk.OrderByDescending(x => x.isChecked))
            {
    <tr class="tableRows" style="height: 100%">
                    <td id="Location">
                        @Html.DisplayFor(modelItem => item.Role, new { @readonly = "readonly" })
                    </td>
                    <td id="LocationCode">
                        @Html.DisplayFor(modelItem => item.Name, new { @readonly = "readonly" })
                    </td>
                    <td>
                        @Html.DropDownListFor(x => item.Checklist, new SelectList(Model.checkListFor, "QuestionnaireID", "QuestionnaireName", item.Checklist), " ", new { @disabled = "disabled", @id = item.EmployeeID, @class = "checklist", @for = item.RevisionID, @data = item.stageApproverID, @Name = item.Checklist, @itemid = item.StageID })
                    </td>
        <td>
                        @Html.CheckBoxFor(x => item.isChecked, new { @id = item.EmployeeID, @class = "checkboxForcheckList", @for = item.Checklist, @data = item.RoleID, @onChange = "changedisabled(this.id)" })
                    </td>
                </tr>

            }
        </div>
    <tr class="tableRows configbottomcount">
        <td colspan="4">
            <span>
                Total Records = @Html.DisplayFor(x => x.CountRecord)
            </span>
        </td>
    </tr>
    </table>

    @*<div class="confiremations-tot" style="float: right">
        <table cellpadding="0" cellspacing="0" border="0" width="98%" class="PerformanceHinderTable TableJqgrid">
            <thead>
                <tr class="tableRows">
                    <td class="confiremation-td">
                        @Html.Label("Total Records :")
                        @Html.DisplayFor(x => x.CountRecord)
                    </td>
                </tr>
            </thead>
        </table>
    </div>*@

    <div id="ErrorSaveFeedBackChecklist" style="display: none" title="Error">
        <center class="LoadingWrap">
              Please select Checklist.
        </center>
    </div>
    <div id="ErrorSavecheckList" style="display: none" title="Error">
        <center class="LoadingWrap">
              There is some error.
        </center>
    </div>
<script type="text/javascript">

    $(function () {
        $('select').selectbox();
        $('.sbOptions a').hover(function () {
            $(this).parent().toggleClass("hoveroption");
        });
    });
        $.ajaxSetup({
            // Disable caching of AJAX responses
            cache: false
        });
        $(document).ready(function () {
            $('#checkList_table > tbody  > tr').each(function (i, val) {
                if (($(val).find('.checkboxForcheckList').is(':Checked'))) {
                    $(val).find('.checklist').attr('disabled', false);
                    if ($(val).find('.checklist').attr('Name') == 0) {
                        $(val).find('.checklist').attr('disabled', true);
                    }
                }
            });
        });
        function changedisabled(id) {
            if ($('#' + id).is(':disabled') == true) {
                if ($("#" + id).attr('itemid') == 3 || $("#" + id).attr('itemid') == 6 || $("#" + id).attr('itemid') == 8) {
                    $("#" + id).attr('disabled', true);
                }
                else {
                    $("#" + id).attr('disabled', false);
                }
            }
            else {
                $("#" + id).attr('disabled', true);
                $("#" + id).val('');
                $(".checkboxForcheckList").attr("disabled", false);
            }
        }

        $("#btnSaveFeedback").click(function () {
            $("#loading").dialog(
            {
                closeOnEscape: false,
                resizable: false,
                height: 140,
                width: 300,
                modal: true,
                dialogClass: "noclose"
            });
            var feedBackList = [];
            var stageID = '@Model.StageID';
            $('#checkList_table > tbody  > tr').each(function (i, val) {

                if (($(val).find('.checkboxForcheckList').is(':Checked'))) {
                    var dropdown = $(val).find(".checklist");
                    var checkbox = $(val).find('.checkboxForcheckList');
                    var feedbackObject = {
                        CheckListValue: dropdown.val(),
                        EmployeeId: checkbox.attr("id"),
                        RoleID: checkbox.attr("data"),
                        stageID: stageID,
                        RevisionID: $(val).find('.checklist').attr("for"),
                        StageApproverID: $(val).find('.checklist').attr("data")
                    }

                    feedBackList.push(feedbackObject);
                }
            });
            $.ajax({
                url: '@Url.Action("SaveCheckList", "ExitConfiguration")',
                type: 'POST',
                contentType: "application/json",
                dataType: 'json',
                data: JSON.stringify(feedBackList),
                success: function (results) {
                    $("#loading").dialog("close");
                    $("#loading").dialog("destroy");
                    if (results.status == true) {
                        $("#SeparationStageApproverDialog").dialog('close');
                        $("#SeparationStageApproverDialog").dialog('destroy');
                        location.reload();
                    }
                    else if (results.status == "Error") {
                        $("#ErrorSavecheckList").dialog({
                            closeOnEscape: false,
                            resizable: false,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: 'noclose',
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else {
                        $("#ErrorSaveFeedBackChecklist").dialog({
                            closeOnEscape: false,
                            resizable: false,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: 'noclose',
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                },
                error: function () {
                    $("#loading").dialog("close");
                    $("#loading").dialog("destroy");
                    $("#ErrorSavecheckList").dialog({
                        closeOnEscape: false,
                        resizable: false,
                        height: 'auto',
                        width: 300,
                        modal: true,
                        dialogClass: 'noclose',
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                }
            });
        });

        $("#btnClose").click(function () {
            $("#SeparationStageApproverDialog").dialog("close");
            $("#SeparationStageApproverDialog").dialog("destroy");
        });
    </script>

    <h2 class="popup-head1 mrgnT10">
        Select Exit Feedback CheckList
    </h2>

   <div class="tablestyle3">
        <table id="jqExitFeedbackCheckListTable"></table>
    </div>
    <div id="jqExitFeedbackCheckListTablePager">
    </div>
   <div class="bluebutton1 clearB floatR">
        <div class="bluebgtable1">
            Total Records : <span id="showRecordCount"></span>
        </div>
    </div>

<div id="SalesNameExistDialog" title="Exit Feedback CheckList details" style="display: none">
    <p>
        Date Range Exists!
    </p>
</div>
<div id="ModuleSaveSuccess" title="Exit Feedback CheckList details" style="display: none">
    <p>
        Exit Feedback CheckList details has been saved successfully.
    </p>
</div>
<div id="ModuleSaveError" title="Exit Feedback CheckList details" style="display: none">
    <p>
        Exit Feedback CheckList details could not be saved.
    </p>
</div>
<div id="deleteModuleConfirmation" title="Delete Exit Feedback CheckList details" style="display: none">
    <p>
        Are you sure you want to delete the selected record?
    </p>
</div>
<div id="deleteModuleSuccess" title="Delete Exit Feedback CheckList details" style="display: none">
    <p>
        Exit Feedback CheckList details deleted successfully.
    </p>
</div>
<div id="deleteModuleError" title="Delete Exit Feedback CheckList details" style="display: none">
    <p>
        Exit Feedback CheckList details could not be deleted.
    </p>
</div>
<div id="NoModuleRecordSelected" title="Delete Exit Feedback CheckList details" style="display: none">
    <p>
        Please select atleast one record to delete.
    </p>
</div>

<div id="ChecklistRequiredDialog" title="Exit Feedback CheckList details" style="display: none">
    <p>
        Please select value of Checklist.
    </p>
</div>
<div id="NameRequiredDialog" title="Exit Feedback CheckList details" style="display: none">
    <p>
        Please select Name.
    </p>
</div>

@using (@Html.BeginForm("", "", FormMethod.Post, new { @id = "addExitFeedbackCheckList" }))
{
    @Html.HiddenFor(x => x.StageID)
    @Html.HiddenFor(x=>x.Checklist)
    @Html.HiddenFor(x=>x.ChecklistName)

}

<script src="../../Scripts/Global.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        strdate="";
        endate="";
        oldStartDate="";
        oldEndDate="";
        checkListNames = @(Html.Raw(Json.Encode(Model.checkListNames)));
        var c = [];
        c.push("Select");
        $.each(checkListNames, function (index,value) {

            c.push(value.Employee);
        });

        checkListFor=@(Html.Raw(Json.Encode(Model.checkListFor)));
        var ckeckListforlist=[];
        ckeckListforlist.push("Select");
        $.each(checkListFor,function(index,value){

            ckeckListforlist.push(value.QuestionnaireName);
        });

        $("#jqExitFeedbackCheckListTable").jqGrid({
            // Ajax related configurations
            url: '@Url.Action("LoadExitFeedbackCheckListGrid", "ExitConfiguration")',
            postData: { OrderNumber : '@Model.StageID'},
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["","","","Checklist", "Name", "Role","Delete"],
            // Configure the columns
            colModel: [
            { name: "ExitFeedbackCheckListID", index: "ExitFeedbackCheckListID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenChecklistID", index: "HiddenChecklistID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenNameID", index: "HiddenNameID", align: "left", width: 120, editable: true, hidden: true },
            { name: "ChecklistName", index: "ChecklistName", align: "left", width: 107,  editable: true, editrules: { required: true, custom: true, custom_func: isYearSelected}, edittype: "select", editoptions: { value: ckeckListforlist, dataEvents: [{ type: 'change', fn: function(e) {ChangeChecklist(e); } }]} },
            { name: "Name", index: "Name", align: "left", width: 107, editable: true, editrules: { required: true, custom: true, custom_func: isMonthSelected}, edittype: "select", editoptions: { value: c, dataEvents: [{ type: 'change', fn: function(e) {ChangeName(e); } }]} },
            { name: "Role", index: "Role", align: "left", width: 140 },
            { name: "Delete", index: "Delete", width: 30, align: "left", formatter: DeleteExitFeedbackCheckListCheckbox }
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqExitFeedbackCheckListTablePager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            //sorting
            loadonce:true,
            editurl: '@Url.Action("SaveExitFeedbackCheckListDetails", "ExitConfiguration")',

            gridComplete: function () {
                var grid = $(this).getRowData();
                var count = jQuery("#jqExitFeedbackCheckListTable").jqGrid('getGridParam', 'records');
                if (count > 20) {
                    $('#jqExitFeedbackCheckListTablePager_center').show();
                }
                else {
                    $('#jqExitFeedbackCheckListTablePager_center').hide();
                }
                if($("#jqExitFeedbackCheckListTable").jqGrid('getGridParam', 'records') == 0)
                {
                    $("#showRecordCount").html("").append("No records present.");
                }
                else
                {
                    $("#showRecordCount").html("").append($("#jqExitFeedbackCheckListTable").jqGrid('getGridParam', 'records'));
                }
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                $('#addExitFeedbackCheckList #Checklist').val(rowData["HiddenChecklistID"]);
                $('#addExitFeedbackCheckList #Name').val(rowData["HiddenNameID"]);

            }
        }).navGrid("#jqExitFeedbackCheckListTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

        $("#jqExitFeedbackCheckListTable").jqGrid('inlineNav', "#jqExitFeedbackCheckListTablePager",
        {
            edit: true,
            editicon: "ui-icon-pencil",
            add: true,
            addicon: "ui-icon-plus",
            save: true,
            saveicon: "ui-icon-disk",
            cancle: true,
            cancelicon: "ui-icon-cancel",
            addParams: {
                useFormatter: false
            },
            editParams: {
                keys: false,
                oneditfunc: null,
                sucessfunc: function (data) {
                },
                url: null,
                extraparam: {
                    CheckListID: function () {
                        return $('#addExitFeedbackCheckList #QuestionnaireID').val();
                    },
                    NameID: function () {
                        return $('#addExitFeedbackCheckList #CheckListNameID').val();
                    },
                    LoggedUserName: function () {
                        return $('#addExitFeedbackCheckList #UserName').val();
                    }
                },
                aftersavefunc: function (data,response) {
                    var result = $.parseJSON(response.responseText);
                    $("#jqExitFeedbackCheckListTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
                    if(result.isModuleNameExist == true)
                    {
                        $("#SalesNameExistDialog").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == true)
                    {
                        $("#ModuleSaveSuccess").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == false)
                    {
                        $("#ModuleSaveError").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == "Error")
                    {
                        DisplayErrorDialog("Save Exit Feedback CheckList Details");
                    }
                    else {
                        DisplayErrorDialog("Save Exit Feedback CheckList Details");
                    }

                },
                errorfunc: null,
                afterrestorefunc: null,
                restoreAfterError: true,
                mtype: "POST"
            }
        });
    });

    function ChangeChecklist(e) {
        var Checklist = e.target[e.target.selectedIndex].text;
        var ID=0;
        $.each(checkListFor,function(index, value) {
            if(value.QuestionnaireName== Checklist)
            {
                ID=value.QuestionnaireID;
            }
        });
        $('#addExitFeedbackCheckList #QuestionnaireID').val(ID);

    }
    function ChangeName(e) {
        var Name = e.target[e.target.selectedIndex].text;
        var ID=0;
        $.each(checkListNames,function(index, value) {
            if(value.Employee== Name)
            {
                ID=value.EmployeeID;
            }
        });
        $('#addExitFeedbackCheckList #CheckListNameID').val(ID);

        $.ajax({
            url: "GetRoleForSelectedEmployeeName/ExitConfiguration",
            type: 'POST',
            async: false,
            data: {EmployeeID: ID},
            success: function (results) {
                var Role=results.Role;
                $('#jqExitFeedbackCheckListTable').jqGrid('setCell', e.currentTarget.parentNode.parentNode.id, 'Role', Role);
            }
        });
    }

    function isMonthSelected(value,colname)
    {
        if(value == "0")
        {
            $("#ChecklistRequiredDialog").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $.preventDefault();
        }
        else
        {
            return [true,""];
        }
    }
    function isYearSelected(value,colname)
    {
        if(value == "0")
        {
            $("#NameRequiredDialog").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $.preventDefault();
        }
        else
        {
            return [true,""];
        }
    }

    function DeleteExitFeedbackCheckListCheckbox(cellValue, options, rowdata, action) {
        return '<input type="checkbox" class="ModuleChk" id=' + rowdata["ExitFeedbackCheckListID"] + '>';
    }

    var SelectedModuleId = [];
    function GetSelectedCheckbox() {
        SelectedModuleId = [];
        $("#jqExitFeedbackCheckListTable :checked").each(function (i, val) {
            SelectedModuleId.push($(this).prop("id"));
        });
    }
    $('#SelectAllSalesBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk:visible").attr("checked", true);
            SelectedModuleId.push($(this).prop("id"));
        });
    });
    $('#DeselectAllSalesBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk:visible").attr("checked", false);
        });
    });

    $('#DeleteSalesBtn').on('click', function () {
        GetSelectedCheckbox();
        DeleteSalesPeriodDetails(SelectedModuleId);
    });

    function DeleteExitFeedbackCheckListDetails(SelectedModuleId) {
        if(SelectedModuleId.length == 0)
        {
            $("#NoModuleRecordSelected").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
        }
        else
        {
            $('#deleteModuleConfirmation').dialog({
                autoOpen: false,
                modal: true,
                width: 300,
                height: 125,
                resizable: false,
                dialogClass: "noclose",
                title: "Delete Exit Feedback CheckList Details",
                buttons:
					{
					    Ok: function () {
					        $.ajax({
					            url: '@Url.Action("DeleteExitFeedbackCheckListDetails", "ExitConfiguration")',
					            data: JSON.stringify(SelectedModuleId),
					            contentType: "application/json",
					            type: 'POST',
					            success: function (data) {

					                $("#deleteModuleConfirmation").dialog("close");
					                $("#jqExitFeedbackCheckListTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                if (data.status == true) {
					                    $("#deleteModuleSuccess").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 140,
					                        width: 300,
					                        dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == false) {
					                    $("#deleteModuleError").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 'auto',
					                        width: 300,
					                        dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == "Error") {

					                    DisplayErrorDialog("Delete Exit Feedback CheckList details");
					                }
					                else {
					                    DisplayErrorDialog("Delete Exit Feedback CheckList details");
					                }
					            }
					        });
					    },
					    Cancel: function () {
					        $(this).dialog('close');
					    }
					}
            });
            $('#deleteModuleConfirmation').dialog('open');
        }
    }
</script>