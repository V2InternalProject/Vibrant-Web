@model HRMS.Models.FinanceTrackingSummaryModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.form.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/Global.min.js")" type="text/javascript"></script>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
@{
    ViewBag.Title = "Finance Payments Tracking Summary";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
@*@section HeaderLinks{
    @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
}*@
@using (@Html.BeginForm("", "", FormMethod.Post, new { @id = "formFinanceTrackingSummary" }))
{
    @Html.HiddenFor(x => x.DeliveryUnit)
    @Html.HiddenFor(x => x.EmployeeId)
    @Html.HiddenFor(x => x.ClientNameID)
    @Html.HiddenFor(x => x.DeliveryUnitID)
    @Html.HiddenFor(x => x.ClientName)
    @Html.HiddenFor(x => x.Current)
    @Html.HiddenFor(x => x.Days1To30)
    @Html.HiddenFor(x => x.Days31To60)
    @Html.HiddenFor(x => x.Days61To90)
    @Html.HiddenFor(x => x.DaysAbove90)
    @Html.HiddenFor(x => x.CollectionAmount)
    @Html.HiddenFor(x => x.LastPaymentDate)
    @Html.HiddenFor(x => x.Total)
    @Html.HiddenFor(x => x.PaymentTerms)
    @Html.HiddenFor(x => x.Status)
    @Html.HiddenFor(x => x.FinancePaymentOutstandingDataID)
    @Html.HiddenFor(x => x.FinancePaymentTrackingDataID)
    @Html.HiddenFor(x => x.RFIID)

}

<link href="../../Content/New%20Design/pms.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/New%20Design/common.js" type="text/javascript"></script>
<section class="PMSContainer Container">
    <div class="FixedHeader">
        <div class="clearfix">
            <h2 class="MainHeading">Invoicing</h2>
        </div>
        <nav class="sub-menu-colored">
            @*@if ((HttpContext.Current.User.IsInRole("Account Owners")))
            {
                <a href="@Url.Action("GenerateInvoice", "Invoice")?TextLink=IRGenerator">Generate Invoice</a>
            }
            <a href="@Url.Action("GenerateInvoice", "Invoice")?TextLink=IRApproval">Invoice Approvals</a>
            <a href="@Url.Action("GenerateInvoice", "Invoice")?TextLink=FinanceApproval">Invoice (Finance)</a>
            @if ((HttpContext.Current.User.IsInRole("Account Owners")) || (HttpContext.Current.User.IsInRole("Expense_Admin")))
            {
                <a href="@Url.Action("FinancePaymentTracking", "Invoice")">Payment Data</a>
                <a href="@Url.Action("FinanceTrackingSummary", "Invoice")" class="selected">Outstanding Data</a>
            }*@

            @Html.HorizontalMenu(Session["PageLevelAccess"] as List<HRMS.Extensions.MenuModel>);
        </nav>
    </div>
    <div class="MainBody ProjectIndexbody">
        <div class="FormContainerBox clearfix FinanceSummaryFliter">
            <div class="colOneThird">
				<div class="clearfix formcol">
					<div class="LabelDiv">
						@Html.Label("Client Name:")
					</div>
					<div class="InputDiv">
                     @Html.DropDownListFor(x => x.ClientNameID, new SelectList(Model.ClientListdata, "ClientId", "ClientName", "Select"), "Select", new { @id = "ClientListSummaryDataID" })
					</div>
				</div>
			</div>
            <div class="colOneThird">
				<div class="clearfix formcol">
					<div class="LabelDiv">
						@Html.Label("Delivery Unit:")
					</div>
					<div class="InputDiv">
                      @Html.DropDownListFor(x => x.DeliveryUnitID, new SelectList(Model.DeliveryUnitListdata, "DeliveryUnitId", "DeliveryUnitName", "Select"), "Select", new { @id = "DeliveryUnitListSummaryDataID" })
					</div>
				</div>
			</div>
            <div class="colOneThird">
				<div class="clearfix formcol">
					<div class="LabelDiv">
						 @Html.Label("Status:")
					</div>
					<div class="InputDiv">
                          @Html.DropDownListFor(x => x.StatusID, new SelectList(Model.StatusListdata, "StatusID", "StatusName", "Select"), "Select", new { @id = "StatusListSummaryDataID" })
					</div>
				</div>
			</div>
        </div>

        <div class="ButtonContainer2 clearfix">
            <input type="button" class="ButtonGray mrgnR8" value="Export to Excel" id="BtnExportToexcelFinancePayTrackingSummary" />
        </div>

        <div class="tablestyle3" id="FPODContainer">
            @*FPT: Finance Payment OutStanding Data*@
            <table id="jqFinancePaymentTrackingSummaryTable">
            </table>
        </div>
        <div id="jqFinancePaymentTrackingSummaryTablePager">
        </div>

       <div id="FinanceOutStandingShowHistoryDialog" style="display: none;">
        </div>
        <div id="TableGridError1" style="display: none">
            <center>
               There is no entry in the Grid.
            </center>
        </div>
    </div>
</section>

<script type="text/javascript">

    $(document).ready(function () {

        deliveryUnitList = @(Html.Raw(Json.Encode(ViewBag.DeliveryUnitListdata)));
        var dUnitList = [];
        dUnitList.push("Select");
        $.each(deliveryUnitList, function (index, value) {

            dUnitList.push(value.DeliveryUnitName);
        });

        statusListData = @(Html.Raw(Json.Encode(ViewBag.StatusListdata)));
        var StatusList = [];
        StatusList.push("Select");
        $.each(statusListData, function (index, value) {

            StatusList.push(value.StatusName);
        });

        $("#jqFinancePaymentTrackingSummaryTable").jqGrid({
            // Ajax related configurations
            url: '@Url.Action("FinanceOutStandingDataLoadGrid", "Invoice")',
            postData: { selectedClientID: function () { return $('#ClientListSummaryDataID :selected').val(); }, selectedDeliveryUnitID: function () { return $('#DeliveryUnitListSummaryDataID :selected').val();}, selectedStatusID: function () { return $('#StatusListSummaryDataID :selected').val();} },
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["","","","","Client Name","","Delivery Unit", "Status", "Current","", "1-30 Days","","31-60 Days","", "61-90 Days","", "> 90 Days","","TOTAL","","Payment Terms","", "Collection Amount","", "Last Payment Date","", "History"],
            // Configure the columns
            colModel: [
                { name: "RFIItemID", index: "RFIItemID", align: "left", width: 10,hidden:true,editable: true },
                { name: "FinancePaymentTrackingDataID", index: "FinancePaymentTrackingDataID", align: "left", width: 10,hidden:true,editable: true },
                { name: "FinancePaymentOutstandingDataID", index: "FinancePaymentOutstandingDataID", align: "left", width: 10,hidden:true,editable: true },
                { name: "RFIID", index: "RFIID", align: "left", width: 10,hidden:true,editable: true},
                { name: "ClientName", index: "ClientName", align: "left", width: 190 },
                { name: "ClientName", index: "ClientName", align: "left", width: 190 ,hidden:true,editable: true},
                { name: "DeliveryUnit", index: "DeliveryUnit", align: "left", width: 107, editable: true, editrules: { required: true }, edittype: "select", editoptions: { value: dUnitList, dataEvents: [{ type: 'change', fn: function(e) {getDeliveryUnitSummary(e); } }]} },
                { name: "Status", index: "Status", align: "left", width: 107, editable: true, editrules: { required: true }, edittype: "select", editoptions: { value: StatusList, dataEvents: [{ type: 'change', fn: function(e) {getStatusSummary(e); } }]} },
                { name: "Current", index: "Current", align: "left", width: 150 },
                { name: "Current", index: "Current", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "Days1To30", index: "Days1To30", align: "left", width: 150 },
                { name: "Days1To30", index: "Days1To30", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "Days31To60", index: "Days31To60", align: "left", width: 150 },
                { name: "Days31To60", index: "Days31To60", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "Days61To90", index: "Days61To90", align: "left", width: 150 },
                { name: "Days61To90", index: "Days61To90", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "DaysAbove90", index: "DaysAbove90", align: "left", width: 150 },
                { name: "DaysAbove90", index: "DaysAbove90", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "Total", index: "Total", align: "left", width: 150 },
                { name: "Total", index: "Total", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "PaymentTerms", index: "PaymentTerms", align: "left", width: 110 },
                 { name: "PaymentTerms", index: "PaymentTerms", align: "left", width: 110 ,hidden:true,editable: true},
                { name: "CollectionAmount", index: "CollectionAmount", align: "left", width: 150 },
                 { name: "CollectionAmount", index: "CollectionAmount", align: "left", width: 150 ,hidden:true,editable: true},
                { name: "LastPaymentDate", index: "LastPaymentDate", align: "left", width: 100, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "LastPaymentDate", index: "LastPaymentDate", align: "left", width: 100, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} ,hidden:true,editable: true},
                { name: "History", index: "History", align: "left", width: 150, formatter: returnHistoryLink, formatoptions: { target: "_new", baseLinkUrl: 'viewAppFile.php'},hidden:true }
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqFinancePaymentTrackingSummaryTablePager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            scrollbar:true,
            autowidth: true,
            shrinkToFit: false,
            // Default sorting
            sortname: "",
            sortorder: "asc",
            // Grid caption
            editurl: '@Url.Action("SaveFinanceOutstandingDataDetails", "Invoice")',
            gridComplete: function () {
                $("#FPODContainer").find('p').text("");
                var grid = $(this).getRowData();
                var count = jQuery("#jqFinancePaymentTrackingSummaryTable").jqGrid('getGridParam', 'records');
                if (count == 0) {
                    $('#gbox_jqFinancePaymentTrackingSummaryTable').hide();
                    $("#FPODContainer").append("<p>No records found</p>");
                }
                else {
                    $('#gbox_jqFinancePaymentTrackingSummaryTable').show();
                    if (count > 20) {
                        $('#jqFinancePaymentTrackingSummaryTablePager').show();
                    }
                    else {
                        $('#jqFinancePaymentTrackingSummaryTablePager').hide();
                    }
                }
                 $('#jqFinancePaymentTrackingSummaryTablePager').show();
            },
            loadComplete :function () {

           for(var i = 0; i < 1 ; i++) {
              $("#jqFinancePaymentTrackingSummaryTable").jqGrid("addRowData", "new_row", { Id: "new_row"});
              $("td","#new_row","#jqFinancePaymentTrackingSummaryTable").css({'font-weight': 'bold'});
           }
           var CurrentAmountInitial = 0;
           var days1To30AmountInitial=0;
           var days31To60AmountInitial=0;
           var days61To90AmountInitial=0;
           var daysAbove90AmountInitial=0;
           var TotalAmountInitial=0;

           var ids = $("#jqFinancePaymentTrackingSummaryTable").jqGrid('getDataIDs');
           for (var i = 0; i < ids.length; i++) {

              var itemId = ids[i];
              var rowData = $("#jqFinancePaymentTrackingSummaryTable").getRowData(itemId);
              var CurrentAmount = rowData["Current"];
              if(CurrentAmount  != "") {
                CurrentAmountInitial  = parseInt(CurrentAmountInitial ) + parseInt(CurrentAmount );
              }
              var days1To30Amount=rowData["Days1To30"];
              if(days1To30Amount != "") {
                days1To30AmountInitial = parseInt(days1To30AmountInitial) + parseInt(days1To30Amount);
              }
              var days31To60Amount=rowData["Days31To60"];
              if(days31To60Amount != "") {
                days31To60AmountInitial = parseInt(days31To60AmountInitial) + parseInt(days31To60Amount);
              }
              var days61To90Amount=rowData["Days61To90"];
              if(days61To90Amount != "") {
                days61To90AmountInitial = parseInt(days61To90AmountInitial) + parseInt(days61To90Amount);
              }
              var daysAbove90Amount=rowData["DaysAbove90"];
              if(daysAbove90Amount != "") {
                daysAbove90AmountInitial = parseInt(daysAbove90AmountInitial) + parseInt(daysAbove90Amount);
              }
              var TotalAmount=rowData["Total"];
              if(TotalAmount != "") {
                TotalAmountInitial = parseInt(TotalAmountInitial) + parseInt(TotalAmount);
              }
           }

           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'DeliveryUnit', "Total");
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'Current', CurrentAmountInitial);
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'Days1To30', days1To30AmountInitial);
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'Days31To60', days31To60AmountInitial);
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'Days61To90', days61To90AmountInitial);
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'DaysAbove90', daysAbove90AmountInitial);
           $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'Total', TotalAmountInitial);
          $('#jqFinancePaymentTrackingSummaryTable').jqGrid('setCell', "new_row", 'History', '');
           $('#jqFinancePaymentTrackingSummaryTable').find('#undefined').hide();

           },
            onCellSelect: function (rowid, iCol) {
            }
        }).navGrid("#jqFinancePaymentTrackingSummaryTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );
        $("#jqFinancePaymentTrackingSummaryTable").jqGrid('inlineNav', "#jqFinancePaymentTrackingSummaryTablePager",
        {
            edit: true,
            editicon: "ui-icon-pencil",
            add: false,
            addicon: "ui-icon-plus",
            save: true,
            saveicon: "ui-icon-disk",
            cancel: true,
            cancelicon: "ui-icon-cancel",
            addtext: "Add",
            edittext: "Edit",
            canceltext: "Cancel",
            savetext: "Save",
            addParams: {
                useFormatter: false
            },
            editParams: {
                keys: false,
                oneditfunc: null,
                sucessfunc: function (data) {
                },
                url: null,
                extraparam: {
                     DeliveryUnit: function () {

                        return  $('#formFinanceTrackingSummary #DeliveryUnit').val();
                    },
                     Status: function () {

                        return  $('#formFinanceTrackingSummary #Status').val();
                    }
                },
                aftersavefunc: function (resultMessage, status) {

                },
                errorfunc: null,
                afterrestorefunc: null,
                restoreAfterError: true,
                mtype: "POST"
            }
        });

         $('#BtnExportToexcelFinancePayTrackingSummary').click(function () {
            var Currentcount = jQuery("#jqFinancePaymentTrackingSummaryTable").jqGrid('getGridParam', 'records');
            var ClientID=$('#ClientListSummaryDataID :selected').val();
            var DeliveryUnitID=$('#DeliveryUnitListSummaryDataID :selected').val();
            var StatusID=$('#StatusListSummaryDataID :selected').val();
            if (Currentcount == 0) {
                $("#TableGridError1").dialog({
                    resizable: false,
                    height: 140,
                    width: 300,
                    modal: true,
                    buttons: {
                        Ok: function () {
                            $(this).dialog("destroy");
                        }
                    }
                });
                $.preventDefault();
            }
            window.location.href = '@Url.Action("ExportToExcelFinanceOutStandingData", "Invoice")?ClientID=' + ClientID + "&DeliveryUnitID=" + DeliveryUnitID+ "&StatusID=" + StatusID;
        });
    });

     $("#ClientListSummaryDataID").change(function () {
        selectedStatusID = $('#StatusListDataID :selected').val();
        selectedClientID = $('#ClientListDataID :selected').val();
        selectedDeliveryUnitID = $('#DeliveryUnitListDataID :selected').val();
        jQuery("#jqFinancePaymentTrackingSummaryTable").trigger("reloadGrid");

    });

    $("#DeliveryUnitListSummaryDataID").change(function () {
        selectedStatusID = $('#StatusListDataID :selected').val();
        selectedDeliveryUnitID = $('#DeliveryUnitListDataID :selected').val();
        selectedClientID = $('#ClientListDataID :selected').val();
        jQuery("#jqFinancePaymentTrackingSummaryTable").trigger("reloadGrid");

    });

       $("#StatusListSummaryDataID").change(function () {
        selectedStatusID = $('#StatusListDataID :selected').val();
        selectedDeliveryUnitID = $('#DeliveryUnitListDataID :selected').val();
        selectedClientID = $('#ClientListDataID :selected').val();
        jQuery("#jqFinancePaymentTrackingSummaryTable").trigger("reloadGrid");

    });

 function getDeliveryUnitSummary(e) {

         var Name = e.target[e.target.selectedIndex].text;
         var ID;
         $.each(deliveryUnitList, function(index, value){

         var dName=value.DeliveryUnitName.replace('  ',' ');

         if(dName  == Name)
         {
            ID=value.DeliveryUnitId;
         }
         });

         $('#formFinanceTrackingSummary #DeliveryUnit').val(ID);
     }
     function getStatusSummary(e) {

         var Name = e.target[e.target.selectedIndex].text;
         var ID;
         $.each(statusListData, function(index, value){

         var sName=value.StatusName.replace('  ',' ');

         if(sName  == Name)
         {
            ID=value.StatusID;
         }
         });

         $('#formFinanceTrackingSummary #Status').val(ID);
     }

    function returnHistoryLink(cellValue, options, rowdata, action) {
        var historyID=options.rowId;
        //historyID = parseInt(historyID);
        if(historyID!="new_row")
        {
             //return "<a href='/Invoice/FinancePaymentOutstandingDataViewHistory/?FinancePaymentOutstandingDataID=" + rowdata['FinancePaymentOutstandingDataID']+"' >Show</a>";
             return "<a href='#' onclick=openFinancePaymentOutstandingDataViewHistory("+historyID+") >Show</a>";
        }else
        {
             return "";
        }

    }
    function openFinancePaymentOutstandingDataViewHistory(historyID)
    {

    var data=$("#jqFinancePaymentTrackingSummaryTable").getRowData(historyID);
    var RFIID = data.RFIID;

        $.ajax({
            url:'@Url.Action("FinancePaymentOutstandingDataViewHistory", "Invoice")',
            data: {RFIID:RFIID},
            type:'GET',
            async: true,
            success:function(results) {
//                $("#loading").dialog("close");
//                $("#loading").dialog("destroy");
                $("#FinanceOutStandingShowHistoryDialog").empty().append(results);
                $("#FinanceOutStandingShowHistoryDialog").dialog({
                    closeOnEscape: false,
                    resizable: false,
                    height: 'auto',
                    width: 1200,
                    title: "Show History",
                    modal: true,
                    close: function (event, ui) {
                        $("#FinanceOutStandingShowHistoryDialog").dialog("destroy");
                    }
                });
            },
            error: function (results) {
//            $("#loading").dialog("close");
//                $("#loading").dialog("destroy");
                DisplayErrorDialog();
            }
        });
    }
</script>