@model HRMS.Models.SalesPeriodModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.form.js")" type="text/javascript"></script>
<link href="../../Content/New%20Design/pms.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/New%20Design/common.js" type="text/javascript"></script>
@{
    ViewBag.Title = "Sales Period";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
@*@section HeaderLinks{
    @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
}*@

<section class="PMSContainer Container">
    <div class="FixedHeader">
        <div class="clearfix">
            <h2 class="MainHeading">
                Configurations</h2>
        </div>
        <nav class="sub-menu-colored">
          <a href="@Url.Action("PhaseManagement", "SEM")">Phase Management</a>
          <a href="@Url.Action("PhasesPracticeMapping", "SEM")">Phases and Practice mapping</a>
          <a href="@Url.Action("SalesPeriod", "Invoice")" class="selected">Sales Period</a>
        </nav>
    </div>
    <div class="MainBody ProjectIndexbody">
        <div class="blueBorderNew NoTitleGridsContainer clearfix">
            <div class="ButtonContainer2">
                <input type="button" id="SelectAllSalesBtn" value="Select All" class="ButtonGray mrgnR8" />
                <input type="button" id="DeselectAllSalesBtn" value="Deselect All" class="ButtonGray mrgnR8" />
                <input type="button" id="DeleteSalesBtn" value="Delete" class="ButtonGray mrgnR8" />
            </div>
            <div class="tablestyle3">
                <table id="jqSalesPeriodTable">
                </table>
            </div>
            <div id="jqSalesPeriodTablePager">
            </div>
            <div class="TotalRecordsDiv">
                <div class="bluebgtable1">
                    Total Records : <span id="showRecordCount"></span>
                </div>
            </div>
        </div>
    <div id="SalesNameExistDialog" title="Sales Period details" style="display: none">
        <p>
            Date Range Exists!
        </p>
    </div>
    <div id="ModuleSaveSuccess" title="Sales Period details" style="display: none">
        <p>
            Sales Period details has been saved successfully.
        </p>
    </div>
    <div id="ModuleSaveError" title="Sales Period details" style="display: none">
        <p>
            Sales Period details could not be saved.
        </p>
    </div>
    <div id="deleteModuleConfirmation" title="Delete Sales Period details" style="display: none">
        <p>
            Are you sure you want to delete the selected record?
        </p>
    </div>
    <div id="deleteModuleSuccess" title="Delete Sales Period details" style="display: none">
        <p>
            Sales Period details deleted successfully.
        </p>
    </div>
    <div id="deleteModuleError" title="Delete Sales Period details" style="display: none">
        <p>
            Sales Period details could not be deleted.
        </p>
    </div>
    <div id="NoModuleRecordSelected" title="Delete Sales Period details" style="display: none">
        <p>
            Please select atleast one record to delete.
        </p>
    </div>

    <div id="MonthRequiredDialog" title="Sales Period details" style="display: none">
        <p>
            Please select value of Month.
        </p>
    </div>
    <div id="YearRequiredDialog" title="Sales Period details" style="display: none">
        <p>
            Please select value of Year.
        </p>
    </div>
    <div id="IsOpenRequiredDialog" title="Sales Period details" style="display: none">
        <p>
            Please select value of IsOpen.
        </p>
    </div>
    </div>
</section>
@using (@Html.BeginForm("", "", FormMethod.Post, new { @id = "addSalesPeriod" }))
{
    @Html.HiddenFor(x => x.UserName)
    @Html.HiddenFor(x => x.SalesPeriodMonthID)
    @Html.HiddenFor(x => x.SalesPeriodYearID)
    @Html.HiddenFor(x => x.SalesPeriodIsOpenID)

}
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<script type="text/javascript">
      $(document).ready(function () {
   strdate="";
   endate="";
      oldStartDate="";
      oldEndDate="";
       stringMonthList = @(Html.Raw(Json.Encode(Model.SalesPeriodMonthLists)));
       var c = [];
       c.push("Select");
       $.each(stringMonthList, function (index,value) {

         c.push(value.SalesPeriodMonth);
        });

        stringYearList=@(Html.Raw(Json.Encode(Model.SalesPeriodYearLists)));
        var yearlist=[];
        yearlist.push("Select");
        $.each(stringYearList,function(index,value){

        yearlist.push(value.SalesPeriodYear);
        });

        stringIsOpenList=@(Html.Raw(Json.Encode(Model.SalesPeriodIsOpenLists)));
        var IsOpenList=[];
        IsOpenList.push("Select");
        $.each(stringIsOpenList,function(index,value){
        IsOpenList.push(value.SalesPeriodIsOpen);
        });

        $("#jqSalesPeriodTable").jqGrid({
            // Ajax related configurations
            url: '@Url.Action("LoadSalesPeriodGrid", "Invoice")',
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["","","","","Sales Period Month", "Sales Period Year", "Sales Period Start Date", "Sales Period End Date", "Is Open?","Delete"],
            // Configure the columns
            colModel: [
            { name: "SalesPeriodID", index: "SalesPeriodID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenSalesPeriodMonthID", index: "HiddenSalesPeriodMonthID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenSalesPeriodYearID", index: "HiddenSalesPeriodYearID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenSalesPeriodIsOpenID", index: "HiddenSalesPeriodIsOpenID", align: "left", width: 120, editable: true, hidden: true },
             { name: "SalesPeriodMonth", index: "SalesPeriodMonth", align: "left", width: 107, editable: true, editrules: { required: true, custom: true, custom_func: isMonthSelected}, edittype: "select", editoptions: { value: c, dataEvents: [{ type: 'change', fn: function(e) {ChangeMonth(e); } }]} },
              { name: "SalesPeriodYear", index: "SalesPeriodYear", align: "left", width: 107,  editable: true, editrules: { required: true, custom: true, custom_func: isYearSelected}, edittype: "select", editoptions: { value: yearlist, dataEvents: [{ type: 'change', fn: function(e) {ChangeYear(e); } }]} },
            { name: "SalesPeriodStartDate", index: "SalesPeriodStartDate", align: "left", width: 150, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "SalesPeriodEndDate", index: "SalesPeriodEndDate", align: "left", width: 150, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "SalesPeriodIsOpen", index: "SalesPeriodIsOpen", align: "left", width: 87, editable: true, editrules: { required: true, custom: true, custom_func: isIsOpenSelected}, edittype: "select", editoptions: { value: IsOpenList, dataEvents: [{ type: 'change', fn: function(e) {ChangeIsOpen(e); } }]} },

                {
                    name: "Delete",
                    index: "Delete",
                    width: 40,
                    align: "left",
                    formatter: DeleteSalesPeriodCheckbox
                }
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqSalesPeriodTablePager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            //sorting
            loadonce:true,
            editurl: '@Url.Action("SaveSalesPeriodDetails", "Invoice")',

            gridComplete: function () {
            var grid = $(this).getRowData();
            var count = jQuery("#jqSalesPeriodTable").jqGrid('getGridParam', 'records');
            if (count > 20) {
                $('#jqSalesPeriodTablePager_center').show();
            }
            else {
                $('#jqSalesPeriodTablePager_center').hide();
            }
            if($("#jqSalesPeriodTable").jqGrid('getGridParam', 'records') == 0)
            {
                $("#showRecordCount").html("").append("No records present.");
            }
            else
            {
                $("#showRecordCount").html("").append($("#jqSalesPeriodTable").jqGrid('getGridParam', 'records'));
            }
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                $('#addSalesPeriod #SalesPeriodMonthID').val(rowData["HiddenSalesPeriodMonthID"]);
                 $('#addSalesPeriod #SalesPeriodYearID').val(rowData["HiddenSalesPeriodYearID"]);
                  $('#addSalesPeriod #SalesPeriodIsOpenID').val(rowData["HiddenSalesPeriodIsOpenID"]);
            }
        }).navGrid("#jqSalesPeriodTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

        $("#jqSalesPeriodTable").jqGrid('inlineNav', "#jqSalesPeriodTablePager",
        {
            edit: true,
            editicon: "ui-icon-pencil",
            add: true,
            addicon: "ui-icon-plus",
            save: true,
            saveicon: "ui-icon-disk",
            cancle: true,
            cancelicon: "ui-icon-cancel",
            addParams: {
                useFormatter: false
            },
            editParams: {
                keys: false,
                oneditfunc: null,
                sucessfunc: function (data) {
                },
                url: null,
                extraparam: {
                    SalesPeriodMonthID: function () {
                        return $('#addSalesPeriod #SalesPeriodMonthID').val();
                    },
                    SalesPeriodYearID: function () {
                        return $('#addSalesPeriod #SalesPeriodYearID').val();
                    },
                    SalesPeriodIsOpenID: function () {
                        return $('#addSalesPeriod #SalesPeriodIsOpenID').val();
                    },
                    LoggedUserName: function () {
                        return $('#addSalesPeriod #UserName').val();
                    },
                    SalesPeriodStartDate:function(){
                        return strdate;
                    },
                    SalesPeriodEndDate:function(){
                        return endate;
                    }
                },
                aftersavefunc: function (data,response) {
                var result = $.parseJSON(response.responseText);
                $("#jqSalesPeriodTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
                if(result.isModuleNameExist == true)
                {
                    $("#SalesNameExistDialog").dialog({
                        resizable: false,
                        autoOpen: true,
                        height: 140,
                        width: 300,
                        modal: true,
                        dialogClass: "noclose",
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                    }
                    else if(result.status == true)
                    {
                        $("#ModuleSaveSuccess").dialog({
                        resizable: false,
                        autoOpen: true,
                        height: 140,
                        width: 300,
                        modal: true,
                        dialogClass: "noclose",
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                    }
                    else if(result.status == false)
                    {
                        $("#ModuleSaveError").dialog({
                        resizable: false,
                        autoOpen: true,
                        height: 140,
                        width: 300,
                        modal: true,
                        dialogClass: "noclose",
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                    }
                    else if(result.status == "Error")
                    {
                     DisplayErrorDialog("Save Sales Period Details");
                    }
                    else {
                        DisplayErrorDialog("Save Sales Period Details");
                    }

                },
                errorfunc: null,
                afterrestorefunc: null,
                restoreAfterError: true,
                mtype: "POST"
            }
        });
    });

    function ChangeMonth(e) {
         var SalesPeriodMonth = e.target[e.target.selectedIndex].text;
         var ID=0;
         $.each(stringMonthList,function(index, value) {
         if(value.SalesPeriodMonth== SalesPeriodMonth)
         {
            ID=value.SalesPeriodMonthID;
         }
         });
         $('#addSalesPeriod #SalesPeriodMonthID').val(ID);
          var yer=$('#addSalesPeriod #SalesPeriodYearID').val();
         var mon=$('#addSalesPeriod #SalesPeriodMonthID').val();
         var start= new Date();
         start.setFullYear(yer,(mon-1),1);
         var startDate = $.datepicker.formatDate( "mm/dd/yy", start);
         var end=new Date();
         end.setFullYear(yer,(mon-1),31);
         var endDate=$.datepicker.formatDate( "mm/dd/yy", end);
          strdate=startDate;
        endate=endDate;
         $('#jqSalesPeriodTable').jqGrid('setCell', e.currentTarget.parentNode.parentNode.id, 'SalesPeriodStartDate', startDate);
         $('#jqSalesPeriodTable').jqGrid('setCell', e.currentTarget.parentNode.parentNode.id, 'SalesPeriodEndDate', endDate);
    }
    function ChangeYear(e) {

         var SalesPeriodYear = e.target[e.target.selectedIndex].text;
         var ID=0;
         $.each(stringYearList,function(index, value) {
         if(value.SalesPeriodYear== SalesPeriodYear)
         {
            ID=value.SalesPeriodYearID;
         }
         });
         $('#addSalesPeriod #SalesPeriodYearID').val(ID);
         var yer=$('#addSalesPeriod #SalesPeriodYearID').val();
         var mon=$('#addSalesPeriod #SalesPeriodMonthID').val();
         var start= new Date();
         start.setFullYear(yer,(mon-1),1);
         var startDate = $.datepicker.formatDate( "mm/dd/yy", start);
         var end=new Date();
         end.setFullYear(yer,(mon-1),31);
         var endDate=$.datepicker.formatDate( "mm/dd/yy", end);
        strdate=startDate;
        endate=endDate;
         $('#jqSalesPeriodTable').jqGrid('setCell', e.currentTarget.parentNode.parentNode.id, 'SalesPeriodStartDate', startDate);
         $('#jqSalesPeriodTable').jqGrid('setCell', e.currentTarget.parentNode.parentNode.id, 'SalesPeriodEndDate', endDate);

    }
     function ChangeIsOpen(e) {
         var SalesPeriodIsOpen = e.target[e.target.selectedIndex].text;
         var ID=0;
         $.each(stringIsOpenList,function(index, value) {
         if(value.SalesPeriodIsOpen== SalesPeriodIsOpen)
         {
            ID=value.SalesPeriodIsOpenID;
         }
         });
         $('#addSalesPeriod #SalesPeriodIsOpenID').val(ID);
    }
     function isMonthSelected(value,colname)
     {
        if(value == "0")
        {
          $("#MonthRequiredDialog").dialog({
	      modal: true,
	      resizable: false,
	      height: 140,
	      width: 300,
          dialogClass: "noclose",
	      buttons:
	      {
	          "Ok": function () {
	              $(this).dialog("close");
	          }
	      }
	  });
        $.preventDefault();
        }
        else
        {
            return [true,""];
        }
     }
      function isYearSelected(value,colname)
     {
        if(value == "0")
        {
          $("#YearRequiredDialog").dialog({
	      modal: true,
	      resizable: false,
	      height: 140,
	      width: 300,
          dialogClass: "noclose",
	      buttons:
	      {
	          "Ok": function () {
	              $(this).dialog("close");
	          }
	      }
	  });
        $.preventDefault();
        }
        else
        {
            return [true,""];
        }
     }
     function isIsOpenSelected(value,colname)
     {
        if(value == "0")
        {
          $("#IsOpenRequiredDialog").dialog({
	      modal: true,
	      resizable: false,
	      height: 140,
	      width: 300,
          dialogClass: "noclose",
	      buttons:
	      {
	          "Ok": function () {
	              $(this).dialog("close");
	          }
	      }
	  });
        $.preventDefault();
        }
        else
        {
            return [true,""];
        }
     }

    function DeleteSalesPeriodCheckbox(cellValue, options, rowdata, action) {
        return '<input type="checkbox" class="ModuleChk" id=' + rowdata["SalesPeriodID"] + '>';
    }

    var SelectedModuleId = [];
    function GetSelectedCheckbox() {
        SelectedModuleId = [];
        $("#jqSalesPeriodTable :checked").each(function (i, val) {
            SelectedModuleId.push($(this).prop("id"));
        });
    }
    $('#SelectAllSalesBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk:visible").attr("checked", true);
            SelectedModuleId.push($(this).prop("id"));
        });
    });
    $('#DeselectAllSalesBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk:visible").attr("checked", false);
        });
    });

    $('#DeleteSalesBtn').on('click', function () {
        GetSelectedCheckbox();
        DeleteSalesPeriodDetails(SelectedModuleId);
    });

    function DeleteSalesPeriodDetails(SelectedModuleId) {
    if(SelectedModuleId.length == 0)
    {
        $("#NoModuleRecordSelected").dialog({
	           modal: true,
	           resizable: false,
	           height: 140,
	           width: 300,
               dialogClass: "noclose",
	           buttons:
	           {
	               "Ok": function () {
	                   $(this).dialog("close");
	               }
	           }
	       });
    }
    else
    {
        $('#deleteModuleConfirmation').dialog({
			    autoOpen: false,
			    modal: true,
			    width: 300,
			    height: 125,
			    resizable: false,
                dialogClass: "noclose",
			    title: "Delete Sales Period Details",
			    buttons:
					{
					    Ok: function () {
					        $.ajax({
					            url: '@Url.Action("DeleteSalesPeriodDetails", "Invoice")',
					            data: JSON.stringify(SelectedModuleId),
					            contentType: "application/json",
					            type: 'POST',
					            success: function (data) {

                                $("#deleteModuleConfirmation").dialog("close");
                                $("#jqSalesPeriodTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                if (data.status == true) {
					                    $("#deleteModuleSuccess").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 140,
					                        width: 300,
                                            dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
                                   else if (data.status == false) {
					                    $("#deleteModuleError").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 140,
					                        width: 300,
                                            dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == "Error") {

					                   DisplayErrorDialog("Delete Sales Period details");
					                }
					                else {
					                    DisplayErrorDialog("Delete Sales Period details");
					                }
					            }
					        });
					    },
					    Cancel: function () {
					        $(this).dialog('close');
					    }
					}
			});
        $('#deleteModuleConfirmation').dialog('open');
        }
    }
</script>