@model HRMS.Models.SkillMatrix.SkillMatrixSearchAll

<script type="text/javascript">
    var ResourceID="";
    var SkillDropId;
    var RatingVal;
    $(document).click(function (e) {
        if (!$(e.target).is('.EmpLink')) {
            $("#PopUpOfEmpInfoExpense").fadeOut();
        }
    });
    $(document).ready(function () {

        $('#btnDeleteSearch').click(function(){

            var Count = GetSelectedCheckbox();

            if(Count == 1)
            {
                var temp=DeleteSearchByEmployeeName(SelectedId);
            }
            else
            {
                alert("checkbox not selcted");

            }

        });

        var EmployeecodeGrid;
        $("#txtSearchEmployee").autocomplete({

            source: function (request, response) {
                $.getJSON('@Url.Action("SearchEmployeeAutoSuggest", "EmployeeDetails")', { term: request.term }, function (data) {
                    response($.map(data, function (el) {
                        var emplyeeInformation = el.EmployeeName + "{" + el.EmployeeCode + "}";
                        return {
                            label: emplyeeInformation,
                            value: el.EmployeeName,
                            text: el.EmployeeCode
                        };

                    }));
                });
            },
            select: function (event, ui) {
                GetEmployeeCode(event, ui);
                EmployeecodeGrid = $('#EmployeeId').val();
                $('#jqSearchByEmployeeName').trigger("reloadGrid");
            }

        });
        function GetEmployeeCode(event, ui) {
            var EmployeeId = ui.item.text;
            $('#Employeename').val(ui.item.value);
            $('#EmployeeId').val(ui.item.text);
            $('#HideBeforeSelect').show();


        }
        ResoucePools = @(Html.Raw(Json.Encode(ViewBag.IsResource)));
        var ResoucePool = [];
        ResoucePool.push("Select");
        $.each(ResoucePools, function (index,value) {
            ResoucePool.push(value.ResourcePoolName);
        });

        var SkillName=[];

        Ratings = @(Html.Raw(Json.Encode(ViewBag.IsRating)));
        var Rating = [];
        Rating.push("Select");
        $.each(Ratings, function (index,value) {
            Rating.push(value.Rating);
        });

        $("#jqSearchByEmployeeName").jqGrid({

            // Ajax related configurations
            url: '@Url.Action("LoadSearchByEmployeeName", "SkillMatrix")',

            datatype: "json",
            mtype: "POST",
            postData: { userEmployeecode: function () { return EmployeecodeGrid } },
            // Specify the column names
            colNames: ['','','EmployeeName', 'EmployeeCode','SkillID', 'ResourcePoolName', 'SkillName', 'Rating','Delete'],

            // Configure the columns
            colModel: [

                { name: "ID", index: "ID", hidden: true, width: 100, align: "left",editable:true },
                 { name: "loggedInUserEmployeeCode", index: "loggedInUserEmployeeCode", align: "center", width: 20, editable: true, hidden: true },
                { name: "EmployeeName", index: "EmployeeName", hidden: true, width: 100, align: "left" },
                { name: "EmployeeCode", index: "EmployeeCode", hidden: true, width: 100, align: "left" },
                { name: "SkillID", index: "SkillID", hidden: true, width: 100, align: "left" ,editable:true},
                { name: "ResourcePoolName", index: "ResourcePoolName", align: "center", width: 107,editable: true, editrules: { required: true }, edittype: "select", editoptions: { value: ResoucePool, dataEvents: [{ type: 'change', fn: function(e) { getResourcePoolName(e); } }]} },
                { name: "Description", index: "Description", align: "center", width: 107,editable: true, editrules: { required: true }, edittype: "select", editoptions: { value: SkillName, dataEvents: [{ type: 'change', fn: function(e) { getSkillName(e); } }]} },
                { name: "Rating", index: "Rating", align: "center", width: 107, editable: true, editrules: { required: true }, edittype: "select", editoptions: { value: Rating, dataEvents: [{ type: 'change', fn: function(e) { getRatings(e); } }]} },
                { name: "Delete", index: "Delete", width: 100, align: "left",  formatter: ForAppendCheckboxID},
            ],

            // Grid total width and height
            width: 700,
            jsonReader: { repeatitems: false },
            toppager: true,
            bottompager: false,
            rowNum: 5,
            rowList: [5, 10, 20],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            pager: $("#pager"),
            // loadonce: true,
            sortname: "ResourcePoolName",
            sortorder: "asc",

            editurl: '@Url.Action("SaveSearchEmployeeByName", "SkillMatrix")',
            gridComplete: function () {
            },
            onCellSelect: function (rowid, iCol) {
                jQuery('#jqSearchByEmployeeName').setColProp('ResourcePoolName',{editable:false});
                jQuery('#jqSearchByEmployeeName').setColProp('Description',{editable:false});
            }
        }).navGrid("#pager",
          { search: false, refresh: false, add: false, edit: false, del: false },
          {}, // settings for edit
          {},
          {}
         );
        $("#jqSearchByEmployeeName").jqGrid('inlineNav', "#pager",
        {
            edit: true,
            editicon: "ui-icon-pencil",
            add: true,
            addicon: "ui-icon-plus",
            save: true,
            saveicon: "ui-icon-disk",
            cancle: true,
            cancelicon: "ui-icon-cancel",
            addParams: {
                useFormatter: false,
                addRowParams: {
                    oneditfunc: function (rowid) {
                    }
                }
            },
            editParams: {
                keys: false,
                oneditfunc: function (rowid) {
                },
                sucessfunc: function (data) {
                },
                url: null,
                extraparam: {
                    SkillID: function () {
                        return SkillDropId;
                    },
                    ResourcePoolID:function(){
                        return ResourceID;
                    },
                    Rating:function(){
                        return RatingVal;
                    },
                    loggedInUserEmployeeCode: function () {
                        return '@ViewBag.LogInUserId';
                    }
                },
                beforeSaveRow: function (options, rowid) {

                },
                afterRestore:function(rowid) {
                },
                aftersavefunc: function (result) {
                    $("#SkillDetailsSucess").dialog({
                        resizable: false,
                        autoOpen: true,
                        height: 140,
                        width: 300,
                        modal: true,
                        dialogClass: "noclose",
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                                jQuery('#jqSearchByEmployeeName').setColProp('ResourcePoolName',{editable:false});
                                jQuery('#jqSearchByEmployeeName').setColProp('Description',{editable:false});
                                jQuery("#jqSearchByEmployeeName").trigger("reloadGrid");
                            }
                        }
                    });
                },
                errorfunc: null,
                afterrestorefunc: function(result)
                {

                    jQuery('#jqSearchByEmployeeName').setColProp('ResourcePoolName',{editable:true});
                    jQuery('#jqSearchByEmployeeName').setColProp('Description',{editable:true});
                },
                restoreAfterError: true,
                mtype: "POST"
            }
        });
        function getResourcePoolName(e) {

            var Name = e.target[e.target.selectedIndex].text;
            var resourcePoolId;
            resouPoolID="";
            $.each(ResoucePools, function(index, value){

                if(value.ResourcePoolName == Name)
                {
                    resourcePoolId=value.ResourcePoolID;
                }
            });
            resouPoolID=resourcePoolId;

            $.ajax({
                url: '@Url.Action("ShowSkill", "SkillMatrix")',
                data: { resourcePoolID: resouPoolID },
                type: 'GET',
                success: function (results) {

                    $('#'+e.target.parentNode.nextSibling.childNodes[0].id).empty();
                    var selectValue = '<option value="' +
                    0 + '">' + "Select" + '</option>';
                    $('#' +e.target.parentNode.nextSibling.childNodes[0].id).append(selectValue);
                    $.each(results.results, function (index, value) {
                        var optionhtml = '<option value="' +
                        results.results[index].SkillID + '">' + results.results[index].Description + '</option>';
                        $('#'+e.target.parentNode.nextSibling.childNodes[0].id).append(optionhtml);
                        //resultList=result;
                    });

                }
            });

        }

    });
    function getSkillName(e) {
        var Name = e.target[e.target.selectedIndex].text;
        $.each(SkillNames, function(index, value){
            var skillname=value.Description.replace('  ',' ');

            if(skillname  == Name)
            {
                SkillDropId=value.SkillID;
            }
        });
    }

    function getRatings(e) {
        RatingVal = e.target[e.target.selectedIndex].text;
    }

    function ForAppendCheckboxID(cellValue, options, rowdata, action) {

        return '<input type="checkbox" class="chkForDelete" id=' + rowdata["ID"] + '>';
    }
    var SelectedId = [];
    function GetSelectedCheckbox() {

        SelectedId = [];
        $("#jqSearchByEmployeeName :checked").each(function (i, val) {
            SelectedId.push($(this).prop("id"));
        });
        var Count;
        if(SelectedId.length == 0)
        {
            Count = 0;
            return Count;
        }
        else
        {
            Count = 1;
            return Count;
        }
    }
    function DeleteSearchByEmployeeName(SelectedId) {

        $('#deleteSearchConfirmation').dialog(
			{
			    autoOpen: false,
			    modal: true,
			    width: 300,
			    height: 125,
			    resizable: false,
			    title: "Delete SearchByEmployeeName Detail",

			    buttons:
					{
					    Ok: function () {

					        $.ajax({
					            url: '@Url.Action("DeleteSearchByEmployeeName", "SkillMatrix")',
					            data: JSON.stringify({ "Id": SelectedId }),
					            contentType : 'application/json',
					            type: 'POST',
					            success: function (data){
					                if (data.status == true) {
					                    $("#deleteSearchConfirmation").dialog("close");
					                    $("#deleteSearchSuccess").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 140,
					                        width: 300,
					                        title: "Deleted",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                                $("#jqSearchByEmployeeName").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == "Error") {
					                    $("#deleteSearchConfirmation").dialog("close");
					                    $("#errorDialog").dialog({
					                        resizable: false,
					                        height: 'auto',
					                        width: 'auto',
					                        modal: true,
					                        title: 'Error',
					                        buttons: {
					                            Ok: function () {
					                                $(this).dialog("close");
					                                $("#jqSearchByEmployeeName").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                            }
					                        }
					                    }); //end dialog
					                }
					                else {
					                    $("#deleteSearchConfirmation").dialog("close");
					                    $("#errorDialog").dialog({
					                        resizable: false,
					                        height: 'auto',
					                        width: 'auto',
					                        modal: true,
					                        title: 'Error',
					                        buttons: {
					                            Ok: function () {
					                                $(this).dialog("close");
					                                $("#jqSearchByEmployeeName").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                            }
					                        }
					                    }); //end dialog
					                }
					            }
					        });
					    },
					    Cancel: function () {
					        $(this).dialog('close');
					    }
					}
			}
			);
        $('#deleteSearchConfirmation').dialog('open');
    }
</script>
<div class="blueBorder-E">
    <div class="mrgnB20">
        <h2 class="title-bgcolor clearL">
            @Html.Label("Search By Employee Name")
            <span id="guide">
                <a class="LinkBrown floatR" href="@Url.Action("Index", "SkillMatrix")" id="ExpenseBackPrevious">
                    Back
                </a>
            </span>
        </h2>

    </div>

    <div class="clearfix">
        <div class="confirmation-input-center">
            <div class="clearfix confiremation-left">
                <div class="confiremation-left">
                    @Html.Label("Employee Name:")
                </div>
                <div class="confiremation-left">
                    <input type="text" name="searchValue" id="txtSearchEmployee" class="srchinput" height="20px" />
                </div>
            </div>
            <div id="dynamicElement">
            </div>
        </div>

        <div class="confirmation-input-center">
            <div class="clearfix confiremation-left">
                <div class="confiremation-left">
                    @Html.Label("Employee Name:")
                </div>
                <div>
                    <input type="text" id="Employeename" />
                </div>

                <div class="confiremation-left">
                    @Html.Label("Employee Code:")
                </div>
                <div>
                    <input type="text" id="EmployeeId" />
                </div>

            </div>

        </div>

        <div class="tablestyle3">
            <table id="jqSearchByEmployeeName" class="scroll"></table>
            <div id="pager">
            </div>
        </div>
        <div class="clearB mrgnT10">
            <input type="button" value="Delete" class="button" id="btnDeleteSearch" />
        </div>

    </div>
</div>

<div id="SkillDetailsSucess" style="display: none;">
    <p>
        Skill Details Added Sucessfully.
    </p>
</div>
<div id="deleteSearchConfirmation" style="display: none">
    <p>
        Are you sure you want to delete the selected record?
    </p>
</div>
<div id="deleteSearchSuccess" style="display: none;">
    <p>
        Record has been deleted successfully.
    </p>
</div>