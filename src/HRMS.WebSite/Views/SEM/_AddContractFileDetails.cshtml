@model HRMS.Models.ContractFileDetails
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/Global.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $.ajaxSetup({
        // Disable caching of AJAX responses
        cache: false
    });
    $(document).ready(function () {
        $("#txtAttachedBy").hide();
        $("#txtAttachedDate").hide();
        $("#ContractFile").attr('title', "No files selected");
    });

    $('#btnSaveContractFileDetails').click(function () {
        if ($('#frmAddContractFileDetails').valid()) {
            if (($('#ContractFile').val() != "" && $("#hdnContractAttachmentID").val() == "0") || ($("#hdnContractAttachmentID").val() > "0")) {
                //if ($('#ContractFile').val() != "" ) {
                $("#hdnAttachedBy").val($("#txtAttachedBy").val());
                $("#hdnAttachedDate").val($("#txtAttachedDate").val());
                $("#hdnDescription").val($("#txtDescription").val());
                DisplayLoadingDialog();
                $("#frmAddContractFileDetails").ajaxForm({
                    success: function (results) {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        var st = $.parseJSON(results);
                        if (st.status == true) {
                            $("#addContractFileDialog").dialog('close');
                            $("#ContractFile").replaceWith($("#ContractFile").clone(true));

                            $('#ContractFileUploadSuccess').dialog({
                                modal: true,
                                resizable: false,
                                height: 'auto',
                                width: 'auto',
                                dialogClass: "noclose",
                                open: function () {
                                    $(this).parent().prev('.ui-widget-overlay').css('z-index', '26');
                                    $(this).parent().css('z-index', '27');
                                },

                                buttons: {
                                    "OK": function () {
                                        $(this).dialog("close");
                                        //jQuery("#jqAddCustomerContractFile").trigger("reloadGrid");
                                        $("#jqAddCustomerContractFile").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
                                        $('#ContractFile').val('');
                                    }
                                }
                            });
                        }
                        else if (st.status == false) {
                            $("#ContractFileUploadError").text(" Please select File to upload").show();
                        }
                        else if (st.status == "Error") {
                            DisplayErrorDialog("Add Contract");
                        }
                        else {
                            $('#errorUploadContractFile').dialog({
                                modal: true,
                                resizable: false,
                                height: 'auto',
                                width: 300,
                                title: "Error",
                                dialogClass: "noclose",
                                open: function () {
                                    $(this).parent().prev('.ui-widget-overlay').css('z-index', '26');
                                    $(this).parent().css('z-index', '27');
                                },
                                buttons: {
                                    "OK": function () { $(this).dialog('close'); }
                                }
                            });
                        }
                    },
                    error: function () {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        $('#errorUploadContractFile').dialog({
                            modal: true,
                            resizable: false,
                            height: 'auto',
                            width: 300,
                            title: "Error",
                            dialogClass: "noclose",
                            open: function () {
                                $(this).parent().prev('.ui-widget-overlay').css('z-index', '26');
                                $(this).parent().css('z-index', '27');
                            },
                            buttons: {
                                "OK": function () { $(this).dialog('close'); }
                            }
                        });
                    }
                });
            }
            else {
                $("#ContractFileUploadError").text(" Please select File to upload").show();
                return false;
            }
        }
    });

    $("#ContractFile").change(function () {
        if ($('#ContractFile').val() != "") {
            $("#ContractFileUploadError").hide();
            $("#ContractFileField").val($(this).val());
            $("#ContractFile").attr('title', $(this).val());
        }
    });

    function resetContractFileDetails() {
        $(".field-validation-error").empty();
        $('input').removeClass("input-validation-error");

        $("#ContractFile").replaceWith($("#ContractFile").val("").clone(true));
        $("#ContractFileField").val("No files selected");
        $('#txtDescription').val($('#hdnDescription').val());
    }
</script>
@using (@Html.BeginForm("UploadContractFileDetails", "SEM", FormMethod.Post, new { @id = "frmAddContractFileDetails" }))
{
    <div class="">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.ContractID, new { @id = "hdnContractID" })
        @Html.HiddenFor(m => m.ContractAttachmentID, new { @id = "hdnContractAttachmentID" })
        @Html.HiddenFor(m => m.EmployeeName, new { @id = "hdnEmployeeName" })
        <div class="formrow clearfix">
            <div class="LabelDiv">
                <span class="mandatory">*</span> @Html.Label("Upload Contract File:")
            </div>
            <div class="InputDiv positionR BrowseSpacingFix">
                <input type="file" class="FileUploadBtn" name="doc" id="ContractFile" size="24" />
                <div class="BrowserVisible">
                    <input type="button" class="BtnForCustomUpload" value="Browse.." /><input type="text"
                        id="ContractFileField" class="FileField" value="No files selected" /></div>
                <p class="qualif-detail">
                    <span id="ContractFileUploadError" class="field-validation-error"></span>
                </p>
            </div>
        </div>
        <div class="formrow clearfix">
            <div class="LabelDiv">
                <span class="hiddenstar">* </span>@Html.Label("Attached By:")
            </div>
            <div class="InputDiv">
                @Html.TextBoxFor(model => model.AttachedBy, new { @id = "txtAttachedBy", @disabled = "disabled" })
                @Html.LabelFor(model => model.AttachedBy, Model.AttachedBy, new { @id = "lblAttachedBy" })<br />
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.AttachedBy)</p>
                @Html.HiddenFor(m => m.AttachedBy, new { @id = "hdnAttachedBy" })
            </div>
        </div>
        <div class="formrow clearfix">
            <div class="LabelDiv">
                <span class="hiddenstar">* </span>@Html.Label("Attached Date:")
            </div>
            <div class="InputDiv">
                @Html.TextBoxFor(model => model.AttachedDate, String.Format("{0:MM/dd/yyyy}", Model.AttachedDate), new { @id = "txtAttachedDate", @disabled = "disabled" })
                <label id="lblAttachedDate">
                </label>
                <br />
                <p class="qualif-detail">
                    @Html.ValidationMessageFor(model => model.AttachedDate)</p>
                @Html.Hidden("AttachedDate", String.Format("{0:MM/dd/yyyy}", Model.AttachedDate), new { @id = "hdnAttachedDate" })
            </div>
        </div>
        <div class="formrow clearfix">
            <div class="LabelDiv">
                <span class="hiddenstar">* </span>@Html.Label("Description:")
            </div>
            <div class="InputDiv">
                @Html.TextAreaFor(model => model.Description, new { @id = "txtDescription" })<br />
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.Description)</p>
                @Html.HiddenFor(m => m.Description, new { @id = "hdnDescription" })
            </div>
        </div>
        <div class="mrgnB18 floatR">
            <input type="submit" value="Save" id="btnSaveContractFileDetails" class="ButtonGray mrgnR11" />
            <input type="button" value="Reset" id="btnResetContractFileDetails" onclick="resetContractFileDetails()"
                class="ButtonGray" />
        </div>
    </div>
}
<div id="errorUploadContractFile" style="display: none">
    <center>
    Some error occurred while uploading document.Please try again.
    </center>
</div>
<div id="ContractFileUploadSuccess" title="Save Contract File" style="display: none">
    <center>
    Contract file Saved Successfully.
    </center>
</div>