@model HRMS.Models.TravelViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
@section HeaderLinks{
    @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
}

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(".Title").hide();
    $(document).ready(function () {

        $('#TravelStartDate').removeAttr('disabled');
        $('#TravelStartDate').removeAttr('readonly');
        $('#TravelStartDate').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: "c:+5", showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true });

        $('#TravelEndDate').removeAttr('disabled');
        $('#TravelEndDate').removeAttr('readonly');
        $('#TravelEndDate').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: "c:+5", showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true });
        
    });
    
</script>
<a style="float:right; margin-right:30px; margin-top:10px;margin-bottom:10px;color:brown;" href="#">
    Back</a>
<div class="blueBorder">
 @using (Html.BeginForm("", "", FormMethod.Post, new { @id = "TraveRequestForm" }))
 {
        @Html.ValidationSummary(true)
    <h2 class="mrgnT15 title-bgcolor">
        Travel Request Form</h2>
        @Html.HiddenFor(x => x.TravelEmployeeId)
        @Html.HiddenFor(x => x.TravelId)    
        @Html.HiddenFor(x => x.TravelTRFNo)
    <div class="clearfix blueBorder">
        <div class="leftcol">
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("TRF NO")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.TravelTRFNo, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Requestor Name")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        @Html.TextBoxFor(model => model.TravelEmployeeName, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Organization Unit")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.OrganizationUnit, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Delivery Team")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.DeliveryTeam, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Group Head")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                          @Html.DropDownListFor(model => model.GroupheadApprover, (SelectList)ViewBag.GroupHeadApprover, "Select")
                          <p class="qualif-detail">@Html.ValidationMessageFor(x => x.GroupheadApprover)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travel Type")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                          @Html.DropDownListFor(x => x.TravelType, new SelectList(Model.TravelTypeList, "TravelTypeId", "TravelTypes", "Select"), "Select")
                          <p class="qualif-detail">@Html.ValidationMessageFor(x => x.TravelType)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travel Start Date")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                      @Html.TextBoxFor(x => x.TravelStartDate, String.Format("{0:MM/dd/yyyy}", Model.TravelStartDate), new { @readonly = "readonly", @disabled = "disabled", @Id = "TravelStartDate" })
                      <p class="qualif-detail">@Html.ValidationMessageFor(x => x.TravelStartDate)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Have a valid visa?")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                        @Html.DropDownListFor(model => model.IsValidVisa, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                        <p class="qualif-detail">@Html.ValidationMessageFor(x => x.IsValidVisa)</p>
                    </div>
            </div>

         @*<div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("To make travel-ready only?")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                        @Html.DropDownListFor(model => model.TravelReadyOnly, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                        <p class="qualif-detail">@Html.ValidationMessageFor(x => x.TravelReadyOnly)</p>
                    </div>
            </div>*@
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Is there a point of contact?")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                       @Html.DropDownListFor(model => model.IsPointOfContact, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                       <p class="qualif-detail">@Html.ValidationMessageFor(x => x.IsPointOfContact)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Is eligible for car hire?")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                      @Html.DropDownListFor(model => model.IsEligibleForCarHire, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Additional Information")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        @Html.TextAreaFor(model => model.AdditionalInfo)
                    </div>
            </div>

        </div>

        <div class="rightcol">
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Request Date")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        @Html.TextBoxFor(model => model.RequestDate, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Requestor Employee Code")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.TravelEmployeeCode, new { @readonly = "readonly", @class = "bg-gray" })
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Project Name")<span class="mandatory">*</span>
                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.ProjectName)
                         <p class="qualif-detail">@Html.ValidationMessageFor(x => x.ProjectName)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Project Manager")<span class="mandatory">*</span>
                    </div>
                    <div class="editor-field fieldwidth floatL">
                           @Html.DropDownListFor(model => model.ProjectManagerApprover, (SelectList)ViewBag.ProjectManagerApprover, "Select")
                           <p class="qualif-detail">@Html.ValidationMessageFor(x => x.ProjectManagerApprover)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Admin Approver")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.DropDownListFor(model => model.AdminApprover, (SelectList)ViewBag.financeApprovers, "Select")
                         <p class="qualif-detail">@Html.ValidationMessageFor(x => x.AdminApprover)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travel to Country")

                    </div>
                    <div class="editor-field fieldwidth floatL">
                          @Html.TextBoxFor(model => model.TravelToCountry)
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travel End Date")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                          @Html.TextBoxFor(x => x.TravelEndDate, String.Format("{0:MM/dd/yyyy}", Model.TravelEndDate), new { @readonly = "readonly", @disabled = "disabled", @Id = "TravelEndDate" })
                          <p class="qualif-detail">@Html.ValidationMessageFor(x => x.TravelEndDate)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travelling Abroad for forrst time?")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                     @Html.DropDownListFor(model => model.TravellingAbroadForFirstTime, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                     <p class="qualif-detail">@Html.ValidationMessageFor(x => x.TravellingAbroadForFirstTime)</p>
                    </div>
            </div>

            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Expenses reimbursed by client?")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                       @Html.DropDownListFor(model => model.ExpenseReimbursedByClient, new SelectList(Model.ClientReimbursementList, "ClientTravelsId", "ClientTravelsValue", "Select"), "Select")
                       <p class="qualif-detail">@Html.ValidationMessageFor(x => x.ExpenseReimbursedByClient)</p>
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("If Yes, enter POC details")<span class="mandatory">*</span>

                    </div>
                    <div class="editor-field fieldwidth floatL">
                         @Html.TextBoxFor(model => model.POCDetail)
                         <p class="qualif-detail">@Html.ValidationMessageFor(x => x.POCDetail)</p>
                    </div>
            </div>

        </div>
        
        
   
        
           @* <ul>*@

               @* <li id="lnkSeparationForm">@Html.ActionLink("New Expense Reimbursement Forms", "GetExpenseReimbursementFormDetails", "ExpenseReimbursement")</li>
                <li>@Html.ActionLink("Expense Reimbursement Approvals", "GetExpenseReimbursementStatus", "ExpenseReimbursement")
                    @{
				
                        if (@ViewBag.InboxCount > 0)
                        {
                        <span class="count-red">(@ViewBag.InboxCount: Action Items)</span>
                        }
                    }
                </li>   *@       
                @* <li><a href="@Url.Action("GetTravelFormDetails", "Travel")">
                New Travel Details Form</a></li>
            <li><a href="@Url.Action("GetTravelStatus", "TravelController", new { expenseEmployeeId = ViewBag.encryptedEmployeeId, encryptedExpenseId = ViewBag.EncryptedExpenseId })">
                Travel Approvals</a>
                @{
				
					if (@ViewBag.InboxCount > 0)
					{
				<span class="count-red">(@ViewBag.InboxCount: Action Items)</span>
					}
				}
                
                </li>*@
             
          @*  </ul>*@
      
    </div>
 
    <div class="mrgnT30">
        <input id="BtnSaveTraveRequestForm" type="submit" value="Save" class="button mrgnR5" />
    </div>
 }

 <div class="blueBorder">
    <h2 class="mrgnT15 title-bgcolor">
        Travel Extension (To be filled if current travel duration needs to be extended)</h2>
    <div class="clearfix blueBorder">
        <div class="leftcol">
         
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("From Date")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        <input type="text" /><img class="ui-datepicker-trigger" src="../../Content/themes/base/images/calendar.gif" alt="..." title="...">
                    </div>
            </div>
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("Travel Extension Details")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        <textarea></textarea>
                    </div>
            </div>
        </div>

        <div class="rightcol">
        
            <div class="formcol clearfix">
                <div class="editor-label labelwidth floatL">
                        @Html.Label("To Date")
                    </div>
                    <div class="editor-field fieldwidth floatL">
                        <input type="text" /><img class="ui-datepicker-trigger" src="../../Content/themes/base/images/calendar.gif" alt="..." title="...">
                    </div>
            </div>
        </div>
    </div>
    <div class="mrgnT30">
        <input id="BtnSaveExtTraveReqForm" type="submit" value="Save and continue" class="button mrgnR5" />
    </div>
</div>

<div id="TravelFormRecordSuccess" style="display: none;">
    <p>
        Travel Form details has been saved successfully.
    </p>
</div>
<div id="DateValidatedialog" style="display: none;">
    <p>
        Start Date should not be less than End Date
    </p>
</div>


<script type="text/javascript">

    $('#TraveRequestForm').submit(function () {

        var startDate = new Date($('#TravelStartDate').val());
        var endDate = new Date($('#TravelEndDate').val());
        if (startDate > endDate) {
            $("#DateValidatedialog").dialog({
                resizable: false,
                height: 140,
                width: 300,
                modal: true,
                buttons: {
                    Ok: function () {
                        $(this).dialog("close");
                        return false;
                    }
                }
            });
            return false;
        }

        if ($(this).valid()) {
            $("#loading").dialog({
                closeOnEscape: false,
                resizable: false,
                height: 140,
                width: 300,
                modal: true,
                dialogClass: "noclose"
            });

            var postUrl = '@Url.Action("SaveTravelRequestForm", "Travel")';
            $.ajax({
                url: postUrl,
                type: 'POST',
                data: $('#TraveRequestForm').serialize(),
                success: function (results) {
                    if (results.status == true) {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        $("#DateValidatedialog").dialog("close");
                        $("#DateValidatedialog").dialog("destroy");
                        var oldTrf = '@Model.TravelTRFNo';
                        var newTrf = results.trfno;
                        if (newTrf > oldTrf) {
                            alert("TRF No. " + oldTrf + " Already taken by other user so changed to new TRF No. :" + results.trfno);
                        }
                        $("#TravelFormRecordSuccess").dialog({
                            resizable: false,
                            height: 140,
                            width: 300,
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                    window.location.href = '@Url.Action("Index", "Travel")';
                                }
                            }
                        });

                    }

                    else if (results.status == "Error") {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        $("#errorDialog").dialog({
                            resizable: false,
                            height: 'auto',
                            width: 'auto',
                            modal: true,
                            title: 'Expense Details',
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                    window.location.reload();
                                }
                            }
                        }); //end dialog
                    }

                    else {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        $("#addExpenseErrorMessege").dialog({
                            resizable: false,
                            height: 140,
                            width: 300,
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                    window.location.reload();
                                }
                            }
                        });
                    }
                }
            });
        }
        return false;
    });


    $("#BtnSaveExtTraveReqForm").click(function () {
       
        var postUrl = '@Url.Action("SaveExtensionFormDetails", "Travel")';
        $.ajax({
            url: postUrl,
            type: 'POST',
            Async: false,
            cache: false,
            data: { NewTRFNo: NewTRFNo,Travelid: Travelid },
            success: function (result) {
                if (result == true) {
                    $("#TravelFormRecordSuccess").dialog({
                        resizable: false,
                        height: 140,
                        width: 300,
                        modal: true,
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");

                            }
                        }
                    });
                }
            }
        });
    });

</script>