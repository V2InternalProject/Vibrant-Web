@model HRMS.Models.AdditionalQualification
<script src="@Url.Content("../../Scripts/jquery.form.js")" type="text/javascript"></script>
@using (Html.BeginForm("", "", FormMethod.Post, new { @id = "addAddQualificationDetails" }))
{
    @Html.ValidationSummary(true)
    <div class="mrgnT25">
        @Html.HiddenFor(x => x.QualifEmployeeID)
        @Html.HiddenFor(x => x.AddQualificationID)
        @Html.HiddenFor(x=>x.ConfirmationID)
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("Title")<span class="mandatory">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.TextBoxFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
                @Html.HiddenFor(model => model.Title, new { id = "txtTitle" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("From Duration")<span class="mandatory spanEmployee" style="display: none">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.TextBoxFor(model => model.FromDuration, String.Format("{0:MM/dd/yyyy}", Model.FromDuration), new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.FromDuration)
                @Html.Hidden("FromDuration", String.Format("{0:MM/dd/yyyy}", Model.FromDuration), new { id = "fromDuration" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("To Duration")<span class="mandatory spanEmployee" style="display: none">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.TextBoxFor(model => model.ToDuration, String.Format("{0:MM/dd/yyyy}", Model.ToDuration), new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ToDuration)
                @Html.Hidden("ToDuration", String.Format("{0:MM/dd/yyyy}", Model.ToDuration), new { id = "toDuration" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("Type")<span class="mandatory spanEmployee" style="display: none">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.DropDownListFor(x => x.skill, new SelectList(Model.QualificationList, "AddQualificationID", "AddQualification"), "Select")
                @Html.ValidationMessageFor(model => model.skill)
                @Html.HiddenFor(x => x.skill, new { @id = "drpSkill" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("Skills Acquired")<span class="mandatory spanEmployee" style="display: none">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.TextBoxFor(model => model.AddSkillAquired)
                @Html.ValidationMessageFor(model => model.AddSkillAquired)
                @Html.HiddenFor(model => model.AddSkillAquired, new { @id = "txtAddSkillAquired" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth-achie floatL">
                @Html.Label("Extent to which the skill was used")<span class="mandatory spanEmployee"
                    style="display: none">*</span>
            </div>
            <div class="editor-field fieldwidth-achie floatL">
                @Html.TextAreaFor(model => model.AddSkillUsed)
                @Html.ValidationMessageFor(model => model.AddSkillUsed)
                @Html.HiddenFor(model => model.AddSkillUsed, new { @id = "txtAddSkillUsed" })
            </div>
        </div>
    </div>
    <div class="clear popup_button ">
        <div class="floatR">
            <input id="saveQualificationDetail" type="button" value="Save" class="button btnQual" />
            <button id="cancel" type="button" value="Reset" onclick="emptyDialogAddQualification()"
                class="button btnQual ">
                Reset</button>
        </div>
    </div>
}
<div id="AddQualificationSuccessMessege" title="Project Achievement details" style="display: none;">
    <p>
        Additional Qualification Details have been saved.
    </p>
</div>
<div id="AddAddQualificationErrorMessege" style="display: none;">
    <p>
        Unable to add record
    </p>
</div>
<div id="DeleteAddQualification" style="display: none;">
    <p>
        Record has been deleted.
    </p>
</div>
<div id="DeleteAddQualificationDialog" style="display: none">
    <p>
        Are you sure you want to delete the records?</p>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var JoiningDate = '@ViewBag.JoiningDate';
        $('#FromDuration').datepicker("option", "minDate", JoiningDate);
        $('#FromDuration').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: '2000:c', maxDate: new Date, showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true })
         .bind("change", function () {
             var dateMin = $('#FromDuration').datepicker("getDate");
             var rMin = new Date(dateMin.getFullYear(), dateMin.getMonth(), dateMin.getDate() + 1);
             $('#ToDuration').datepicker("option", "minDate", rMin);

         });
         $('#ToDuration').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: "2000:c", maxDate: new Date, showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true });
    });
    if ('@ViewBag.IsManagerOrEMployee' == "Employee") {
        $('.spanEmployee').show();
    }
    if ('@ViewBag.IsManagerOrEMployee' != "Employee" || '@ViewBag.clickedViewDetails' == "yes") {
            $('#Title').attr('disabled', true);
            $('#FromDuration').attr('disabled', true);
            $('#ToDuration').attr('disabled', true);
            $('#skill').attr('disabled', true);
            $('#AddSkillAquired').attr('disabled', true);
            $('#AddSkillUsed').attr('disabled', true);
            $('.btnQual').hide();
            $('.ui-datepicker-trigger').hide();
        }
        $('#saveQualificationDetail').off('click').on('click', function () {
            $('#Title').rules("add", {
                required: function () {
                    return ('@ViewBag.IsManagerOrEMployee' == "Employee");
                },
                messages:
			{
			    required: "Title is required."
			}
        });

        $('#FromDuration').rules("add", {
            required: function () {
                return ('@ViewBag.IsManagerOrEMployee' == "Employee");
            },
            messages:
			{
			    required: "From Duration is required."
			}
        });

        $('#ToDuration').rules("add", {
            required: function () {
                return ('@ViewBag.IsManagerOrEMployee' == "Employee");
            },
            messages:
			{
			    required: "To Duration is required."
			}
        });

        $('#skill').rules("add", {
            required: function () {
                return ('@ViewBag.IsManagerOrEMployee' == "Employee");
            },
            messages:
			{
			    required: "Skill is required."
			}
        });

        $('#AddSkillAquired').rules("add", {
            required: function () {
                return ('@ViewBag.IsManagerOrEMployee' == "Employee");
            },
            messages:
			{
			    required: "Skill Aquired is required."
			}
        });

        $('#AddSkillUsed').rules("add", {
            required: function () {
                return ('@ViewBag.IsManagerOrEMployee' == "Employee");
            },
            messages:
			{
			    required: "Skill Used is required."
			}
        });
        var postUrl = '@Url.Action("SaveAddQualificationDetails", "ConfirmationProcess")';
        if ($('#addAddQualificationDetails').valid()) {
            $.ajax({
                url: postUrl,
                type: 'POST',
                data: $('#addAddQualificationDetails').serialize(),
                success: function (results) {
                    if (results.status == true) {
                        $('#addAddQualificationDialog').dialog("close");
                        jQuery("#AddQualificationTable").trigger("reloadGrid");
                        $("#AddQualificationSuccessMessege").dialog({
                            resizable: false,
                            height: 140,
                            width: 300,
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if (results.status == "Error") {
                        $("#errorDialog").dialog({
                            title: 'Confirmation Process',
                            resizable: false,
                            height: 'auto',
                            width: 'auto',
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        }); //end dialog
                    }
                    else {
                        $("#AddAddQualificationErrorMessege").dialog({
                            title: 'Confirmation Process',
                            resizable: false,
                            height: 140,
                            width: 300,
                            modal: true,
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                }
            });
        }
        return false;
    });
    var emptyDialogAddQualification = function () {
        $(".field-validation-error").empty();
        $('input').removeClass("input-validation-error");
        $("#Title").val($('#txtTitle').val());
        $("#FromDuration").val($('#fromDuration').val());
        $("#ToDuration").val($('#toDuration').val());
        $("#AddSkillAquired").val($('#txtAddSkillAquired').val());
        $("#AddSkillUsed").val($('#txtAddSkillUsed').val());
        $("#skill").val($('#drpSkill').val());
    }
</script>