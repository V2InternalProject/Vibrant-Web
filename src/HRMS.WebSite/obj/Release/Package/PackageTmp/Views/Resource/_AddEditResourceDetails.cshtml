@model HRMS.Models.AddEdirResourseModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/Global.min.js")" type="text/javascript"></script>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "formAddEdirResourseDetails" }))
{
    @Html.ValidationSummary(true)
    <div class="mrgnT15 clearfix">
        @*@Html.HiddenFor(x => x.ContractID)*@
        @Html.HiddenFor(x => x.EmployeeId)
        @Html.HiddenFor(x => x.ProjectID)
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Helpdesk Ticket ID:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(x => x.HelpdeskTicketID, new { @disabled = "disabled" })
                @Html.HiddenFor(x => x.HelpdeskTicketID, new { @id = "helpdeskticketid" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Project Name:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(x => x.ProjectName, new { @disabled = "disabled" })
                @Html.HiddenFor(x => x.ProjectName, new { @id = "projectname" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Project Start Date:")
            </div>
            <div class="editor-field fieldwidth floatL">
                @Html.TextBoxFor(x => x.ProjectStartDate, String.Format("{0:MM/dd/yyyy}", Model.ProjectStartDate), new { @disabled = "disabled" })
                @Html.Hidden("ProjectStartDate", String.Format("{0:MM/dd/yyyy}", Model.ProjectStartDate), new { @id = "projectstartdate" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Project End Date:")
            </div>
            <div class="editor-field fieldwidth floatL">
                @Html.TextBoxFor(x => x.ProjectEndDate, String.Format("{0:MM/dd/yyyy}", Model.ProjectEndDate), new { @disabled = "disabled" })
                @Html.Hidden("ProjectEndDate", String.Format("{0:MM/dd/yyyy}", Model.ProjectEndDate), new { @id = "projectenddate" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Employee Name:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(x => x.EmployeeName)
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.EmployeeName)</p>
                @Html.HiddenFor(x => x.EmployeeName, new { @id = "employeename" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Reporting To:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.DropDownListFor(x => x.ReportingTo, new SelectList(Model.EmployeeList, "EmployeeId", "EmployeeName"), "Select")
                @Html.HiddenFor(x => x.ReportingTo, new { @id = "reportingto" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Project Role:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.DropDownListFor(x => x.ProjectRole, new SelectList(Model.EmployeeRole, "RoleID", "RoleDescription"), "Select")
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.ProjectRole)</p>
                @Html.HiddenFor(x => x.ProjectRole, new { @id = "projectrole" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Resource Type:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.DropDownListFor(x => x.ResourceType, new SelectList(Model.ResourseTypes, "ResourseTypeID", "ResourseTypeDescription"), "Select")
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.ResourceType)</p>
                @Html.HiddenFor(x => x.ResourceType, new { @id = "resourcetype" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Allocation Start Date:")
            </div>
            <div class="editor-field fieldwidth floatL">
                @Html.TextBoxFor(x => x.AllocationStartDate, String.Format("{0:MM/dd/yyyy}", Model.AllocationStartDate, new { @readonly = "readonly" }))
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.AllocationStartDate)</p>
                @Html.Hidden("AllocationStartDate", String.Format("{0:MM/dd/yyyy}", Model.AllocationStartDate), new { @id = "allocationstartdate", @readonly = "readonly" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Allocation End Date:")
            </div>
            <div class="editor-field fieldwidth floatL">
                @Html.TextBoxFor(x => x.AllocationEndDate, String.Format("{0:MM/dd/yyyy}", Model.AllocationEndDate, new { @readonly = "readonly" }))
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.AllocationEndDate)</p>
                @Html.Hidden("AllocationEndDate", String.Format("{0:MM/dd/yyyy}", Model.AllocationEndDate), new { @id = "allocationenddate", @readonly = "readonly" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                <span class="mandatory">*</span> @Html.Label("Allocated (%):")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(x => x.AllocatedPercentage)
                <p class="qualif-detail">@Html.ValidationMessageFor(x => x.AllocatedPercentage)</p>
                @Html.HiddenFor(x => x.AllocatedPercentage, new { @id = "allocatedpercentage" })
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.Label("Comments:")
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextAreaFor(x => x.Comments)
                @Html.HiddenFor(x => x.Comments, new { @id = "comments" })
            </div>
        </div>
    </div>
    <div class="clear popup_button mrgnT10">
        <div class="floatR">
            <input id="btnaddResourse" type="button" value="Add" class="button mrgnR5" />
            <input id="btnUpdateResourse" type="button" value="Update" class="button mrgnR5" />
            <input id="btnResetResourse" type="button" value="Reset" class="button mrgnR5" onclick="resetResourseDetails()" />
            <input id="btncancel" type="button" value="Cancel" class="button " />
        </div>
    </div>

}
<div class="BorderTransparent NoTitleGridsContainer clearB" id="HideBeforeSelect">
    <h3 class="clearL mrgnT15">
        Current Resource Details</h3>
    <div class="tablestyle3">
        <table id="jqCurrentResourceForAddEditTable">
        </table>
    </div>
    <div id="jqCurrentResourceTableAddEditPager">
    </div>
    <h3>
        Resource History</h3>
    <div class="tablestyle3">
        <table id="jqResourceHistoryAddEditTable">
        </table>
    </div>
    <div id="jqResourceHistoryTableAddEditPager">
    </div>
</div>
<div id="SendMailPopUpForResource" style="display: none">
</div>
<div id="SuccessPopUpForResources" title="Resource allocation" style="display: none">
    <center><span id="ErrormessageForresource"></span></center>
</div>
<script type="text/javascript">
    $(document).ready(function () {
    $('#HideBeforeSelect').hide();
    $('#AllocationStartDate').attr('readonly','readonly');
    $('#AllocationEndDate').attr('readonly','readonly');
        $("#jqCurrentResourceForAddEditTable").jqGrid({
        //Grid for Current Resource Details
            // Ajax related configurations
            url: '@Url.Action("CurrentAllocationLoadGrid", "Resource")',
            postData: { EmployeeId:function () { return $("#EmployeeId").val(); } },//hardcoded for testing
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["Employee Id", "Employee Name", "Resource Pool Name", "Designation Name", "Resource Type","Employment Status", "Start Date", "End Date", "Allocated (%)", "Comments"],
            // Configure the columns
            colModel: [
                { name: "EmployeeId", index: "EmployeeId", align: "left", width: 35},
                { name: "EmployeeName", index: "EmployeeName", align: "left", width: 80 },
                { name: "ResourcePoolName", index: "ResourcePoolName", align: "left", width: 70 },
                { name: "DesignationName", index: "DesignationName", align: "left", width: 70 },
                { name: "ResourceType", index: "ResourceType", align: "left", width: 50 },
                { name: "EmployementStatus", index: "EmployementStatus", align: "left", width: 60 },
                { name: "AllocationStartDate", index: "AllocationStartDate", align: "left", width: 55, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "AllocationEndDate", index: "AllocationEndDate", align: "left", width: 55, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "AllocatedPercentage", index: "AllocatedPercentage", align: "left", width: 40 },
                { name: "Comments", index: "Comments", align: "left", width: 70 },
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqCurrentResourceTableAddEditPager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            // Default sorting
            sortname: "",
            sortorder: "asc",
            // Grid caption
            //caption: "Current Resource Details",
              gridComplete: function () {
            },
            onCellSelect: function(rowid, iCol) {
			},
        }).navGrid("#jqCurrentResourceTableAddEditPager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

     $("#jqResourceHistoryAddEditTable").jqGrid({
            // Ajax related configurations
            // Grid for Resource History
            url: '@Url.Action("AllocationHistoryLoadGrid", "Resource")',
            postData: { EmployeeId: function () { return $("#EmployeeId").val(); } },//hardcoded for testing
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["Employee Id", "Employee Name", "Resource Pool Name", "Designation Name", "Resource Type","Employment Status", "Start Date", "End Date", "Allocated (%)", "Comments"],
            // Configure the columns
            colModel: [
                { name: "EmployeeId", index: "EmployeeId", align: "left", width: 35},
                { name: "EmployeeName", index: "EmployeeName", align: "left", width: 80 },
                { name: "ResourcePoolName", index: "ResourcePoolName", align: "left", width: 70 },
                { name: "DesignationName", index: "DesignationName", align: "left", width: 70 },
                { name: "ResourceType", index: "ResourceType", align: "left", width: 50 },
                { name: "EmployementStatus", index: "EmployementStatus", align: "left", width: 60 },
                { name: "AllocationStartDate", index: "AllocationStartDate", align: "left", width: 55, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "AllocationEndDate", index: "AllocationEndDate", align: "left", width: 55, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "AllocatedPercentage", index: "AllocatedPercentage", align: "left", width: 40 },
                { name: "Comments", index: "Comments", align: "left", width: 70 },
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqResourceHistoryTableAddEditPager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            // Default sorting
            sortname: "",
            sortorder: "asc",
            // Grid caption
            //caption: "Resource History",
              gridComplete: function () {
            },
            onCellSelect: function(rowid, iCol) {
			},
        }).navGrid("#jqResourceHistoryTableAddEditPager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

        $('#AllocationStartDate').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true,minDate:$('#ProjectStartDate').val() , maxDate:$('#ProjectEndDate').val(), yearRange: "-60:+10", showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true, beforeShow: BeforeShowForDatePicker, onClose: onCloseForDatePicker })
         .bind("change", function () {
            var startDate = $('#AllocationStartDate').datepicker("getDate");
            var EndMinDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());
            $('#AllocationEndDate').datepicker("option", "minDate", EndMinDate);
        });
        $('#AllocationEndDate').datepicker({ dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true,maxDate:$('#ProjectEndDate').val(), yearRange: "-60:+10", showOn: "both", buttonImage: "../../Content/themes/base/images/calendar.gif", buttonImageOnly: true, beforeShow: BeforeShowForDatePicker, onClose: onCloseForDatePicker });

        $('#formAddEdirResourseDetails #btncancel').click(function () {
            $('#AddEditResourseDialog').dialog('close');
            $('#AddEditResourseDialog').dialog('destroy');
            window.location.href = '@Url.Action("ResourceIndex", "Resource")';
        });

        $("#formAddEdirResourseDetails #EmployeeName").autocomplete({
            source: function (request, response) {
                $.getJSON('@Url.Action("SearchEmployeeAutoSuggestFoeSEM", "EmployeeDetails")', { term: request.term }, function (data) {
                    response($.map(data, function (el) {
                        var emplyeeInformation = el.EmployeeName;
                        return {
                            label: emplyeeInformation,
                            value: emplyeeInformation,
                            text:el.EmployeeId
                        };
                    }));
                });
            },
            select: function (event, ui) {
                loadGridForAllocation(event, ui);
            }
        });
        function loadGridForAllocation(event, ui) {
            var EmployeeId = ui.item.text;
            $('#EmployeeId').val(EmployeeId);
            jQuery("#jqCurrentResourceForAddEditTable").trigger("reloadGrid");
            jQuery("#jqResourceHistoryAddEditTable").trigger("reloadGrid");
            $('#HideBeforeSelect').show();

        }

        $('#btnaddResourse,#btnUpdateResourse').click(function () {
            if ($('#formAddEdirResourseDetails').valid()) {
                OpenLoadingPopup();
                $.ajax({
                    url: '@Url.Action("AddEditResourse", "Resource")',
                    data: $('#formAddEdirResourseDetails').serialize(),
                    type: 'POST',
                    success: function (results) {
                        if (results.status == true) {
                            CloseLoadingPopup();
                            $("#SuccessPopUpForResources").dialog({
                                resizable: false,
                                height: 150,
                                width: 300,
                                modal: true,
                                title: 'Resource allocation',
                                dialogClass: "noclose",
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                        OpenLoadingPopup();
                                        var buttonClick = 'Add/Edit Resource';
                                        $.ajax({
                                            url: '@Url.Action("ResourceSendMail", "Resource")',
                                            data: { btnClick: buttonClick },
                                            type: 'POST',
                                            success: function (result) {
                                                //$('#AddEditResourseDialog').empty();
                                                CloseLoadingPopup();
                                                $("#SendMailPopUpForResource").empty().append(result);
                                                $("#SendMailPopUpForResource").dialog({
                                                    closeOnEscape: false,
                                                    resizable: false,
                                                    height: 'auto',
                                                    width: 800,
                                                    modal: true,
                                                    title: "Send Mail",
                                                    close: function () {
                                                        $(this).dialog('destroy');
                                                        window.location.href = '@Url.Action("ResourceIndex", "Resource")';
                                                    }
                                                });
                                                $.validator.unobtrusive.parse($("#MailDetails"));
                                                $('#sendCustomerMail').click(function () {
                                                    $("#CCErrorMessage").hide();
                                                    $("#ToErrorMessage").hide();
                                                    if ($('#CustMailDetails').valid()) {
                                                        OpenLoadingPopup();
                                                        var sendMailUrl = '@Url.Action("SendEmail", "SEM")';
                                                        $.ajax({
                                                            url: sendMailUrl,
                                                            type: 'POST',
                                                            data: $('#CustMailDetails').serialize(),
                                                            async: false,
                                                            success: function (serverData) {
                                                                CloseLoadingPopup();
                                                                if (serverData.validCcId == true && serverData.validtoId == true) {
                                                                    if (serverData.status == true) {
                                                                        $("#SendMailPopUpForResource").dialog('destroy');
                                                                        window.location.href = '@Url.Action("ResourceIndex", "Resource")';
                                                                    }
                                                                }
                                                                else if (serverData.status == "Error") {
                                                                    $("#errorDialogForMail").dialog({
                                                                        resizable: false,
                                                                        height: 'auto',
                                                                        width: 'auto',
                                                                        modal: true,
                                                                        title: 'Mail Error',
                                                                        dialogClass: "noclose",
                                                                        buttons: {
                                                                            Ok: function () {
                                                                                $(this).dialog("close");
                                                                                window.location.href = '@Url.Action("ResourceIndex", "Resource")';
                                                                                //return false;
                                                                            }
                                                                        }
                                                                    }); //end dialog
                                                                }
                                                                else {
                                                                    if (serverData.validCcId == false)
                                                                        $("#CCErrorMessage").show();
                                                                    if (serverData.validtoId == false)
                                                                        $("#ToErrorMessage").show();
                                                                    return false;
                                                                }
                                                            },
                                                            error: function () {
                                                                CloseLoadingPopup();
                                                                $("#errorDialogForMail").dialog({
                                                                    title: 'Mail Error',
                                                                    resizable: false,
                                                                    height: 'auto',
                                                                    width: 'auto',
                                                                    modal: true,
                                                                    dialogClass: "noclose",
                                                                    buttons:
                                                {
                                                    Ok: function () {
                                                        $(this).dialog("close");
                                                        window.location.href = '@Url.Action("ResourceIndex", "Resource")';
                                                        //return false;
                                                    }
                                                }
                                                                }); //end dialog
                                                            }
                                                        }); //end ajax
                                                    }
                                                });
                                            }
                                        });
                                    }
                                }
                            });
                            $('#SuccessPopUpForResources #ErrormessageForresource').empty().append(results.results);
                        }
                        else {
                            //$('#SuccessPopUpForResources #ErrormessageForresource').text(results.results);
                            CloseLoadingPopup();
                            $("#SuccessPopUpForResources").dialog({
                                closeOnEscape: false,
                                resizable: false,
                                height: 150,
                                width: 300,
                                modal: true,
                                title: "Resource allocation",
                                dialogClass: "noclose",
                                close: function () {
                                    $(this).dialog('destroy');
                                },
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("destroy");
                                    }
                                }
                            });
                            $('#SuccessPopUpForResources #ErrormessageForresource').empty().append(results.results);
                            return false;
                        }
                    }
                });
            }
        });
    });

    function resetResourseDetails() {
        $('#EmployeeName').val($('#employeename').val());
        $('#Comments').val($('#comments').val());

        $('#AllocatedPercentage').val($('#allocatedpercentage').val());
        $('#AllocationEndDate').val($('#allocationenddate').val());
        $('#AllocationStartDate').val($('#allocationstartdate').val());
        $('#ResourceType').val($('#resourcetype').val());
        $('#ProjectRole').val($('#projectrole').val());
        $('#ReportingTo').val($('#reportingto').val());
        $('#Comments').val($('#comments').val());

    }
    function OpenLoadingPopup() {
        $("#loading").dialog(
          {
              closeOnEscape: false,
              resizable: false,
              height: 140,
              width: 300,
              modal: true,
              dialogClass: "noclose"
          });
    }

    function CloseLoadingPopup() {
        $("#loading").dialog("close");
        $("#loading").dialog("destroy");
    }
</script>