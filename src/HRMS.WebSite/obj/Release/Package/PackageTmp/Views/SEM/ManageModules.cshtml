@model HRMS.Models.ManageModulesModel
@{
    ViewBag.Title = "Manage Modules";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
@*@section HeaderLinks{
        @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
    }

*@

<link href="../../Content/New%20Design/pms.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/New%20Design/common.js" type="text/javascript"></script>
<section class="PMSContainer Container">
    <div class="FixedHeader">
        <div class="clearfix">
            <h2 class="MainHeading">
                Project
            </h2>
        </div>
        <nav class="sub-menu-colored">
            @Html.HorizontalMenu(Session["PageLevelAccess"] as List<HRMS.Extensions.MenuModel>);
        </nav>
    </div>
    <div class="MainBody CustomerIndexbody">
        <div class="FormContainerBox clearfix">
            <div class="leftcol">
                <div class="formrow clearfix">
                    <div class="LabelDiv">
                        @Html.Label("Select Project:")
                    </div>
                    <div class="InputDiv">
                        @Html.DropDownListFor(x => x.ProjectID, new SelectList(Model.ProjectList, "Projectids", "ProjectName"), "Select", new { @id = "ProjectDD" })

                    </div>
                </div>
            </div>
        </div>

        <div class="ButtonContainer2 clearfix">
            <input type="button" id="SelectAllModuleBtn" value="Select All" class="ButtonGray mrgnR8" />
            <input type="button" id="DeselectAllModuleBtn" value="Deselect All" class="ButtonGray mrgnR8" />
            <input type="button" id="DeleteModuleBtn" value="Delete" class="ButtonGray mrgnR8" />
        </div>

        <div class="tablestyle3">
            <table id="jqManageModuleTable"></table>
        </div>
        <div id="jqManageModuleTablePager">
        </div>
        <div class="TotalRecordsDiv">
            <div class="bluebgtable1" id="showRecordCount">
            </div>
        </div>


        <div id="ModuleNameExistDialog" title="Module details" style="display: none">
            <p>
                Module name already exists.
            </p>
        </div>
        <div id="ModuleSaveSuccess" title="Module details" style="display: none">
            <p>
                Record has been saved successfully.
            </p>
        </div>
        <div id="ModuleSaveError" title="Module details" style="display: none">
            <p>
                Module details could not be saved.
            </p>
        </div>
        <div id="deleteModuleConfirmation" title="Delete Module details" style="display: none">
            <p>
                Are you sure you want to delete the selected record?
            </p>
        </div>
        <div id="deleteModuleSuccess" title="Delete Module details" style="display: none">
            <p>
                Record has been deleted successfully.
            </p>
        </div>
        <div id="deleteModuleError" title="Delete Module details" style="display: none">
            <p>
                Module details could not be deleted.
            </p>
        </div>
        <div id="NoModuleRecordSelected" title="Delete Module details" style="display: none">
            <p>
                Please select atleast one record to delete.
            </p>
        </div>
        <div id="StartDateGreaterDialog" title="Module details" style="display: none">
            <p>
                Module Start Date cannot be greater then Module End Date.
            </p>
        </div>
        <div id="EndDateLesserDialog" title="Module details" style="display: none">
            <p>
                Module End Date cannot be lesser then Module Start Date.
            </p>
        </div>
        <div id="ValidWorkHoursDialog" title="Module details" style="display: none">
            <p>
                Please enter only positive numeric value for Work Hours.
            </p>
        </div>
        <div id="ComplexityRequiredDialog" title="Module details" style="display: none">
            <p>
                Please select value of Complexity.
            </p>
        </div>
        @using (@Html.BeginForm("", "", FormMethod.Post, new { @id = "addProjectModule" }))
        {
            @Html.HiddenFor(x => x.UserName)
            @Html.HiddenFor(x => x.ProjectID)
            @Html.HiddenFor(x => x.ComplexityID)
            @Html.HiddenFor(x => x.SelectedModuleName)
        }
    </div>
</section>




<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        oldStartDate="";
        oldEndDate="";
        stringComplexityList = @(Html.Raw(Json.Encode(Model.ComplexityLists)));
        var c = [];
        c.push("Select");
        $.each(stringComplexityList, function (index,value) {
            c.push(value.ComplexityName);
        });

        $("#jqManageModuleTable").jqGrid({
            // Ajax related configurations
            url: '@Url.Action("LoadProjectModuleGrid", "SEM")',
            postData: { ProjectID: function () { return $('#addProjectModule #ProjectID').val() } },
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["","","","Module Name", "Module Description", "Start Date", "End Date", "Complexity", "Work Hours", "Delete"],
            // Configure the columns
            colModel: [
            { name: "ModuleID", index: "ModuleID", align: "left", width: 120, editable: true, hidden: true },
            { name: "HiddenComplexityID", index: "HiddenComplexityID", align: "left", width: 120, editable: true, hidden: true },
            { name: "ProjectID", index: "ProjectID", align: "left", width: 120, editable: true, hidden: true },
                { name: "ModuleName", index: "ModuleName", align: "left", width: 120, editable: true, editrules: { required: true }, editoptions: { maxlength: 100} },
                { name: "ModuleDescription", index: "ModuleDescription", align: "left", width: 120, editable: true, editrules: { required: true }, editoptions: { maxlength: 4000} },
                { name: "ModuleStartDate", index: "ModuleStartDate", align: "left", width: 150, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} ,editable: true, editoptions:{
                    readonly:true,
                    dataEvents: [{ type: 'change', fn: function(e) {ChangeStartDate(e); } }],
                    dataInit: function(element) {
                        $(element).datepicker({
                            dateFormat: 'mm/dd/yy',
                            changeMonth: true,
                            changeYear: true,
                            beforeShow: BeforeShowForDatePicker,
                            onClose: onCloseForDatePicker
                        }).bind("mouseover", function () {
                            $(this).datepicker("option", "minDate", ProjectStartDate);
                            $(this).datepicker("option", "maxDate", ProjectEndDate);
                            var selectedDateID = this.id;
                            var rowID = selectedDateID.split("_");
                            var selectedStartDate = this.value;
                            if(rowID[0]== "new")
                                var endDateValue = $("#"+rowID[0]+"_"+rowID[1]+"_ModuleEndDate").val();
                            else
                                var endDateValue = $("#"+rowID[0]+"_ModuleEndDate").val();
                            if(selectedStartDate > endDateValue && selectedStartDate != "" &&endDateValue != "")
                            {
                                $(this).val(oldStartDate);
                            }
                        });
                    }
                }  },
                { name: "ModuleEndDate", index: "ModuleEndDate", align: "left", width: 150, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} ,editable: true, editoptions:{
                    readonly:true,
                    dataEvents: [{ type: 'change', fn: function(e) {ChangeEndDate(e); } }],
                    dataInit: function(element) {
                        $(element).datepicker({
                            dateFormat: 'mm/dd/yy',
                            changeMonth: true,
                            changeYear: true,
                            beforeShow: BeforeShowForDatePicker,
                            onClose: onCloseForDatePicker
                        }).bind("mouseover", function () {
                            $(this).datepicker("option", "minDate", ProjectStartDate);
                            $(this).datepicker("option", "maxDate", ProjectEndDate);
                            var selectedDateID = this.id;
                            var rowID = selectedDateID.split("_");
                            var selectedEndDate = this.value;
                            if(rowID[0]== "new")
                                var startDateValue = $("#"+rowID[0]+"_"+rowID[1]+"_ModuleStartDate").val();
                            else
                                var startDateValue = $("#"+rowID[0]+"_ModuleStartDate").val();
                            if(selectedEndDate < startDateValue && selectedEndDate != "" && startDateValue != "")
                            {
                                $(this).val(oldEndDate);
                            }
                        });
                    }
                }  },
                { name: "Complexity", index: "Complexity", align: "left", width: 107, editable: true, editrules: { required: true, custom: true, custom_func: isComplexitySelected}, edittype: "select", editoptions: { value: c, dataEvents: [{ type: 'change', fn: function(e) {ChangeComplexity(e); } }]} },
                { name: "WorkHours", index: "WorkHours", align: "left", width: 107, editable: true, editrules: { required: true, custom: true, custom_func: isValidWorkHours } ,sortable:false},
                {
                    name: "Delete",
                    index: "Delete",
                    width: 40,
                    align: "center",
                    formatter: DeleteModuleCheckbox
                }
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqManageModuleTablePager"),
            //rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            //sorting
            loadonce:true,
            editurl: '@Url.Action("SaveProjectModuleDetails", "SEM")',
            // Grid caption
            //caption: "Manage Modules",
            gridComplete: function () {
                var grid = $(this).getRowData();
                var count = jQuery("#jqManageModuleTable").jqGrid('getGridParam', 'records');
                if (count > 20) {
                    $('#jqManageModuleTablePager_center').show();
                }
                else {
                    $('#jqManageModuleTablePager_center').hide();
                }
                if($("#jqManageModuleTable").jqGrid('getGridParam', 'records') == 0)
                {
                    $('.TotalRecordsDiv').hide();
                }
                else
                {
                    $('.TotalRecordsDiv').show();
                    $('#showRecordCount').text("Total Records : " + count);
                }
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                $("#addProjectModule #SelectedModuleName").val(rowData["ModuleName"]);
                $('#addProjectModule #ComplexityID').val(rowData["HiddenComplexityID"]);
                oldStartDate = rowData["ModuleStartDate"];
                oldEndDate = rowData["ModuleEndDate"];
            }
        }).navGrid("#jqManageModuleTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

        $("#jqManageModuleTable").jqGrid('inlineNav', "#jqManageModuleTablePager",
        {
            edit: true,
            editicon: "ui-icon-pencil",
            add: true,
            addicon: "ui-icon-plus",
            save: true,
            saveicon: "ui-icon-disk",
            cancle: true,
            cancelicon: "ui-icon-cancel",
            addtext: "Add",
            edittext: "Edit",
            canceltext: "Cancel",
            savetext: "Save",
            addParams: {
                useFormatter: false,
                addRowParams: {
                    oneditfunc: function (rowid) {
                        $("label[for='undefined']").hide();
                    }
                }
            },
            editParams: {
                keys: false,
                oneditfunc: null,
                sucessfunc: function (data) {
                },
                url: null,
                extraparam: {
                    ComplexityID: function () {
                        return $('#addProjectModule #ComplexityID').val();
                    },
                    LoggedUserName: function () {
                        return $('#addProjectModule #UserName').val();
                    },
                    ProjectID: function () {
                        return $('#addProjectModule #ProjectID').val();
                    },
                    SelectedModuleName: function () {
                        return $("#addProjectModule #SelectedModuleName").val();
                    }
                },
                aftersavefunc: function (data,response) {
                    var result = $.parseJSON(response.responseText);
                    $("#jqManageModuleTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
                    if(result.isModuleNameExist == true)
                    {
                        $("#ModuleNameExistDialog").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 140,
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == true)
                    {
                        $("#ModuleSaveSuccess").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == false)
                    {
                        $("#ModuleSaveError").dialog({
                            resizable: false,
                            autoOpen: true,
                            height: 'auto',
                            width: 300,
                            modal: true,
                            dialogClass: "noclose",
                            buttons: {
                                Ok: function () {
                                    $(this).dialog("close");
                                }
                            }
                        });
                    }
                    else if(result.status == "Error")
                    {
                        DisplayErrorDialog("Save Module Details");
                    }
                    else {
                        DisplayErrorDialog("Save Module Details");
                    }

                },
                errorfunc: null,
                afterrestorefunc: null,
                restoreAfterError: true,
                mtype: "POST"
            }
        });

        if($("#ProjectID").val() == "" || $("#ProjectID").val() == 0)
            $("#jqManageModuleTablePager_left").css("visibility","hidden");
        else
            $("#jqManageModuleTablePager_left").css("visibility","visible");
    });
    function ChangeStartDate(e)
    {
        var selectedDateID = e.target.id;
        var rowID = selectedDateID.split("_");
        var selectedStartDate = e.target.value;
        if(rowID[0]== "new")
            var endDateValue = $("#"+rowID[0]+"_"+rowID[1]+"_ModuleEndDate").val();
        else
            var endDateValue = $("#"+rowID[0]+"_ModuleEndDate").val();
        if(selectedStartDate > endDateValue && selectedStartDate != "" && endDateValue != "")
        {
            $("#StartDateGreaterDialog").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                        if(rowID[0]== "new")
                            $("#"+rowID[0]+"_"+rowID[1]+"_ModuleStartDate").val(oldStartDate);
                        else
                            $("#"+rowID[0]+"_ModuleStartDate").val(oldStartDate);
                    }
                }
            });
        }
    }
    function ChangeEndDate(e)
    {
        var selectedDateID = e.target.id;
        var rowID = selectedDateID.split("_");
        var selectedEndDate = e.target.value;
        if(rowID[0]== "new")
            var startDateValue = $("#"+rowID[0]+"_"+rowID[1]+"_ModuleStartDate").val();
        else
            var startDateValue = $("#"+rowID[0]+"_ModuleStartDate").val();
        if(selectedEndDate < startDateValue && selectedEndDate != "" && startDateValue != "")
        {
            $("#EndDateLesserDialog").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                        if(rowID[0]== "new")
                            $("#"+rowID[0]+"_"+rowID[1]+"_ModuleEndDate").val(oldEndDate);
                        else
                            $("#"+rowID[0]+"_ModuleEndDate").val(oldEndDate);
                    }
                }
            });
        }
    }
    $("#ProjectDD").change(function(){
        var selectedProjectID = $('#ProjectDD :selected').val();
        if(selectedProjectID == ""){
            selectedProjectID=0;
            $("#jqManageModuleTablePager_left").css("visibility","hidden");
        }
        else
            $("#jqManageModuleTablePager_left").css("visibility","visible");
        $.ajax({
            url: "GetSelectedProjectDetails/SEM",
            type: 'POST',
            async: false,
            data: {ProjectID: selectedProjectID},
            success: function (results) {
                if(results != null)
                {
                    if(results.ProjectStartDate!=null)
                        var startDate = eval(results.ProjectStartDate.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"));

                    if(results.ProjectEndDate!=null)
                        var endDate = eval(results.ProjectEndDate.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"));
                    ProjectStartDate = startDate;
                    ProjectEndDate = endDate;
                }
            }
        });
        $('#addProjectModule #ProjectID').val(selectedProjectID);
        $("#jqManageModuleTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
    });
    function ChangeComplexity(e) {
        var complexityName = e.target[e.target.selectedIndex].text;
        var ID = 0;
        $.each(stringComplexityList,function(index, value) {
            if(value.ComplexityName == complexityName)
            {
                ID=value.ComplexityID;
            }
        });
        $('#addProjectModule #ComplexityID').val(ID);
    }

    function isValidWorkHours(value, Colname){
        var pattern = new RegExp(/^\+?[0-9]*\.?[0-9]+$/);

        var valid = pattern.test(value);

        if(!valid) {
            $("#ValidWorkHoursDialog").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                title: "Deleted",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $.preventDefault();
        }
        else
        {
            return [true,""];
        }

    }

    function isComplexitySelected(value,colname)
    {
        if(value == "0")
        {
            $("#ComplexityRequiredDialog").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
            $.preventDefault();
        }
        else
        {
            return [true,""];
        }
    }

    function DeleteModuleCheckbox(cellValue, options, rowdata, action) {
        var A = '<input type="checkbox" class="ModuleChk" id=' + rowdata["ModuleID"] + '>';
        var B= '<label for=' + rowdata["ModuleID"] + ' class="LabelForCheckbox"></label>';
        return A+B;
    }

    var SelectedModuleId = [];
    function GetSelectedCheckbox() {
        SelectedModuleId = [];
        $("#jqManageModuleTable :checked").each(function (i, val) {
            SelectedModuleId.push($(this).prop("id"));
        });
    }
    $('#SelectAllModuleBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk").attr("checked", true);
            SelectedModuleId.push($(this).prop("id"));
        });
    });
    $('#DeselectAllModuleBtn').on('click', function () {
        SelectedModuleId = [];
        $(".ModuleChk").each(function (i, val) {
            $(".ModuleChk").attr("checked", false);
        });
    });

    $('#DeleteModuleBtn').on('click', function () {
        GetSelectedCheckbox();
        DeleteModuleDetails(SelectedModuleId);
    });

    function DeleteModuleDetails(SelectedModuleId) {
        if(SelectedModuleId.length == 0)
        {
            $("#NoModuleRecordSelected").dialog({
                modal: true,
                resizable: false,
                height: 'auto',
                width: 300,
                dialogClass: "noclose",
                buttons:
                {
                    "Ok": function () {
                        $(this).dialog("close");
                    }
                }
            });
        }
        else
        {
            $('#deleteModuleConfirmation').dialog({
                autoOpen: false,
                modal: true,
                width: 300,
                height: 'auto',
                resizable: false,
                dialogClass: "noclose",
                title: "Delete Module Details",
                buttons:
					{
					    Ok: function () {
					        $.ajax({
					            url: '@Url.Action("DeleteModuleDetails", "SEM")',
					            data: JSON.stringify(SelectedModuleId),
					            contentType: "application/json",
					            type: 'POST',
					            success: function (data) {
					                $("#deleteModuleConfirmation").dialog("close");
					                $("#jqManageModuleTable").jqGrid("setGridParam",{datatype:"json"}).trigger("reloadGrid");
					                if (data.status == true) {
					                    $("#deleteModuleSuccess").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 'auto',
					                        width: 300,
					                        dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == false) {
					                    $("#deleteModuleError").dialog({
					                        modal: true,
					                        resizable: false,
					                        height: 'auto',
					                        width: 300,
					                        dialogClass: "noclose",
					                        buttons:
					                        {
					                            "Ok": function () {
					                                $(this).dialog("close");
					                            }
					                        }
					                    });
					                }
					                else if (data.status == "Error") {
					                    DisplayErrorDialog("Delete Module details");
					                }
					                else {
					                    DisplayErrorDialog("Delete Module details");
					                }
					            }
					        });
					    },
					    Cancel: function () {
					        $(this).dialog('close');
					    }
					}
            });
            $('#deleteModuleConfirmation').dialog('open');
        }
    }
</script>
