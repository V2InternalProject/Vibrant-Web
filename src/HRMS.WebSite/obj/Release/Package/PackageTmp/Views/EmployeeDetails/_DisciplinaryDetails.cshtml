@model HRMS.Models.EmployeeDisciplinaryDetailsViewModel
@{
    ViewBag.Title = "Disciplinary Details";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
<link href="../../Content/New%20Design/employee.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/New%20Design/common.js" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("../../Scripts/EmployeeDetails/EmployeeDisciplinaryDetails.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<script type="text/javascript">

    var currentemployeeId = '@Model.EmployeeId';
    var disciplinedetailsjqTableUrlAction = '@Url.Action("LoadDisciplinaryDetailsData", "EmployeeDetails")';
    var DeleteDisciplineDetailsUrlAction = '@Url.Action("DeleteDisciplineDetails", "EmployeeDetails")';
    var CurrentUserName = '@HttpContext.Current.User.Identity.Name';

    $(document).ready(function () {
      $("#hdnAddDisciplineDetailsEmployeeId").val('@Model.EmployeeId');

      $(".ValidationDropDown").each(function () {
            $('.ValidationDropDown').show();
            $('.ValidationDropDown').css({ 'display': 'block !important', 'visibility': 'hidden' });
            $('.ValidationDropDown').next(".selectBox-dropdown").css({ 'position': 'relative', 'visibility': 'visible', 'top': '-20px' });
            $('.ValidationDropDown').next(".selectBox-dropdown").next(".qualif-detail").css({ 'margin-top': '-20px' });
        });

        $('#AddedDate').datepicker({
            dateFormat: "mm/dd/yy", changeMonth: true, changeYear: true, yearRange: '2000:c', maxDate: new Date, showOn: "both",
            buttonImageOnly: true, beforeShow: BeforeShowForDatePicker,
        onClose: onCloseForDatePicker,
        buttonImage: "../../Images/New Design/calender-icon.png", buttonImageOnly: true,});

        $("#Manager").autocomplete({
            source: function (request, response) {
                $.getJSON('@Url.Action("SearchEmployeeAutoSuggest", "EmployeeDetails")', { term: request.term }, function (data) {

                    response($.map(data, function (el) {
                        var emplyeeInformation = el.EmployeeName;
                        return {
                            label: emplyeeInformation,
                            value: el.EmployeeName
                        };

                    }));
                });
            }
        });
        $.ajaxSetup({
            // Disable caching of AJAX responses
            cache: false
        });

        //SetPageTitle('Disciplinary Details');

        // Set up the jquery grid
        $("#disciplinedetailsjqTable").jqGrid({
            // Ajax related configurations
            url: disciplinedetailsjqTableUrlAction,
            postData: { employeeId: '@ViewBag.EmployeeId' },
            datatype: "json",
            mtype: "POST",

            // Specify the column names
            colNames: ["Id", "DisciplineId", "EmployeeId", "RaisedById", "Raised By", "Date", "Disciplinary Memo", "View Disciplinary Memo", "Message", "Manager", "ManagerId", ""],

            // Configure the columns
            colModel: [
                { name: "Id", index: "id", width: 40, align: "left", hidden: true, editable: false },
                { name: "DisciplineId", index: "DisciplineId", width: 40, align: "left", hidden: true ,editable:false},
                { name: "EmployeeId", index: "EmployeeId", width: 40, align: "left", hidden: true, editable: false },
                { name: "CreatedByUserId", index: "CreatedByUserId", width: 40, align: "left", hidden: true, editable: false },
                { name: "CreatedByUserName", index: "CreatedByUserName", width: 20, align: "left", sortable: true, editable: false },
                { name: "AddedDate", index: "AddedDate", width: 15, align: "left", sortable: true, editable:false, formatter: 'date', formatoptions: { newformat: 'm/d/Y' }, sortable: true },
                { name: "DisciplineSubject", index: "DisciplineSubject", width: 25, align: "left", editable:false,hidden: true, sortable: true, sortable: true },
                { name: "View Memo", index: "View Memo", width: 15, align: "left", sortable: true, sortable: true,editable:false, formatter: function () { return '<span class="GridLink">View Memo</span>'; } },
                { name: "DisciplineMessage", index: "DisciplineMessage", width: 100, align: "left", editable:false,sortable: true, hidden: true, sortable: true },
                { name: "Manager", index: "Manager", width: 20, align: "left", sortable: true, editable: false },
                { name: "ManagerId", index: "ManagerId", width: 40, align: "left", hidden: true,editable:false },
                {
                    name: "Delete",
                    index: "Delete",
                    width: 5,
                    align: "center",
                    formatter: function () {
                        if (($('#UserRole').val() != '@HRMS.Models.UserRoles.RMG' && $('#UserRole').val() != '@HRMS.Models.UserRoles.HRExecutive') && ($('#loginUserId').val() != CurrentUserName) && ('@Model.EmpStatusMasterID' != 2)) {
                            return '<img src="../../Images/New Design/delete-icon.png" width="21px" height="25px">';
                        } else {
                            return '';
                        }
                    }
                }
            //
            ],

            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#disciplinedetailsjqTablePager"),
            rowNum: 20,
            rowList: [],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            //caption: "Employee Disciplinary Details",
            gridComplete: function () {
                var grid = $(this).getRowData();
                var count = jQuery("#disciplinedetailsjqTable").jqGrid('getGridParam', 'records');
                // if (count == 0) {
                // $('#gbox_disciplinedetailsjqTable').hide();
                // $("#DesciplinaryDetailsContainer").append("<p>No records found</p>")
               // }
                if ('@Model.EmpStatusMasterID' == 2) {
                    $("#divAddDisciplineDetails").hide();
                    $("#disciplinaryDtls").hide();
                    $("#btnSaveDisciplinaryDetails").hide();
                    $("#disciplinedetailsjqTable").jqGrid('hideCol', 'Delete');
                    $("#gbox_disciplinedetailsjqTable").find('input,select').attr("disabled", true);
                }
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                var selectedDisciplineId = rowData['DisciplineId'];
                var selectedManagerId = rowData['ManagerId'];

                if ((iCol == 7 && ('@Model.EmpStatusMasterID' != 2) && '@ViewBag.EmployeeId' == '@Model.LoginUserId') || (iCol == 7 && ($('#UserRole').val() == '@HRMS.Models.UserRoles.HRAdmin'))) {
                    ShowDisciplinaryDetails(rowData);
                }
                if ($('#UserRole').val() != '@HRMS.Models.UserRoles.HRAdmin') {
                    return false;
                }
                if (iCol == 11 && ('@Model.EmpStatusMasterID' != 2) && rowid != "new_row") {
                   // DeleteQualificationDetail(selectedDisciplineId, rowData);
                }

                if ((iCol == 4 || iCol == 5 || iCol == 9) && ('@Model.EmpStatusMasterID' != 2)) {
                    //EditEmployeeDisciplinaryDetails(rowData);
                }
            }
        }).navGrid("#disciplinedetailsjqTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {}, // settings for add
            {}, // settings for delete
            {} // Search options. Some options can be set on column level
        );

        if ($('#UserRole').val() != '@HRMS.Models.UserRoles.HRAdmin') {
            $("#disciplinaryDtls").hide();
            $("#btnSaveDisciplinaryDetails").hide();
            $("#disciplinedetailsjqTable").jqGrid('hideCol', 'Delete');
        }

    //});  // ready end

    //$(function () {
        $('#cancel').click(function () {
            emptyDialog();
        });
        var postUrl = '@Url.Action("AddUpdateEmployeeDisciplines", "EmployeeDetails")';
        $('#btnSaveDisciplinaryDetails').click(function () {
            if ($('#frmAddEmployeeDisciplines').valid()) {
                  DisplayLoadingDialog();  //checked
                $.ajax({
                    url: postUrl,
                    type: 'POST',
                    data: $('#frmAddEmployeeDisciplines').serialize(),
                    success: function (results) {
                        $("#loading").dialog("close");
                        $("#loading").dialog("destroy");
                        if (results == true) {
                        //$('#AddDiscipline').dialog("close");
                            jQuery("#disciplinedetailsjqTable").trigger("reloadGrid");
                            $("#disciplineDetailsSuccessDialog").dialog({
                                resizable: false,
                                height: 140,
                                width: 300,
                                title: 'Discipline Details',
                                dialogClass: "noclose",
                                modal: true,
                                buttons: {
                                    Ok: function () {
                                     emptyDialog();
                                        $(this).dialog("close");
                                    }
                                },
                                close: function () {
                                    $(".field-validation-error").empty();
                                    $('input').removeClass("input-validation-error");
                                }

                            });
                        }
                        else {
                            $("#disciplineDetailsErrorDialog").dialog({
                                resizable: false,
                                height: 140,
                                width: 300,
                                title: 'Discipline Details',
                                dialogClass: "noclose",
                                modal: true,
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                    }
                                }
                            });
                        }
                    }
                });
            }
            return false;
        });

        var emptyDialog = function () {
        $(".field-validation-error").empty();
        $('input').removeClass("input-validation-error");
        $("#DisciplineSubject").val($("#disciplineSubject").val());
        $("#AddedDate").val($("#addedDate").val());
        $("#Manager").val($("#manager").val());
        $("#Manager").next().find(".selectBox-label").text("Select");
        $("#DisciplineMessage").val($("#disciplineMessage").val());
    }
    });
</script>
@*<h3 class="mrgnT15">
    Disciplinary Details</h3>*@
@*<div class="clearfix">
        @Html.HiddenFor(m => m.LoginUserId, new { id = "loginUserId" })
        @Html.HiddenFor(m => m.UserRole)
        <fieldset class="NoTitleGridsContainer">
            <div id="DisplayDiscipline" style="display: none">
                @{Html.RenderPartial("_DisplayDisciplinaryDetails", Model);}
            </div>
            <div id="AddDiscipline" style="display: none">
                @{Html.RenderPartial("_AddDisciplinaryDetails", Model);}
            </div>
            <div id="deleteRecordConfirmation" style="display: none">
                <p>
                    Are you sure you want to delete this records?</p>
            </div>
            <div id="DeleteRecord" style="display: none">
                <p>
                    Record has been Deleted</p>
            </div>
            <div class="clear">
                <input type="button" value="Add Disciplinary Issue" id="btnAddDisciplineDetails"
                    onclick="AddDisciplinaryDetails()" class="button" />
            </div>
            <div class="tablestyle3">
                <table id="disciplinedetailsjqTable" class="scroll">
                </table>
            </div>
            <div id="disciplinedetailsjqTablePager" />
            <div id="NoRecords" style="display: none; color: Red;">
                No Disciplinary Records
            </div>
        </fieldset>
    </div>*@

<section class="EmployeeContainer Container">
    <div class="FixedHeader">
        <div class="clearfix">
            <h2 class="MainHeading">Employee Details</h2>
        </div>
        <nav class="sub-menu-colored">
           @* <a href="@Url.Action("EmployeeDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Employee</a>
            <a href="@Url.Action("DesignationDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Designation</a>
            <a href="@Url.Action("TravelDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Passport / Visa</a>
            <a href="@Url.Action("DisciplinaryDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })" class="selected">Disciplinary</a>
            <a href="@Url.Action("ProjectDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Project</a>
            <a href="@Url.Action("ExperienceDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Experience</a>
            <a href="@Url.Action("UploadDocuments", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Upload Documents</a>
            <a href="@Url.Action("BondDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Bonds</a>*@

            @if (Model.EmployeeId != null)
            {
                if (ViewBag.UserRole == "HR Executive")
                {
                    <a href="@Url.Action("EmployeeDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })" >Employee</a>
                    <a href="@Url.Action("DesignationDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Designation</a>
                    <a href="@Url.Action("TravelDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Passport / Visa</a>
                    <a href="@Url.Action("DisciplinaryDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })"class="selected">Disciplinary</a>
                    <a href="@Url.Action("ProjectDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Project</a>
                    <a href="@Url.Action("ExperienceDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Experience</a>
                    <a href="@Url.Action("UploadDocuments", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Upload Documents</a>
                }
                else if (ViewBag.UserRole == "RMG")
                {
                    <a href="@Url.Action("EmployeeDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Employee</a>
                    <a href="@Url.Action("DesignationDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Designation</a>
                    <a href="@Url.Action("ProjectDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Project</a>
                    <a href="@Url.Action("ExperienceDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Experience</a>
                }

                else if (ViewBag.UserRole == "HR Admin")
                {
                    <a href="@Url.Action("EmployeeDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Employee</a>
                    <a href="@Url.Action("DesignationDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Designation</a>
                    <a href="@Url.Action("TravelDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Passport / Visa</a>
                    <a href="@Url.Action("DisciplinaryDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })"class="selected">Disciplinary</a>
                    <a href="@Url.Action("ProjectDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Project</a>
                    <a href="@Url.Action("ExperienceDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Experience</a>
                    <a href="@Url.Action("UploadDocuments", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Upload Documents</a>
                    <a href="@Url.Action("BondDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Bond Details</a>
                }
                else
                {
                    <a href="@Url.Action("EmployeeDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Employee</a>
                    <a href="@Url.Action("DesignationDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Designation</a>
                    <a href="@Url.Action("TravelDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Passport / Visa</a>
                    <a href="@Url.Action("DisciplinaryDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })" class="selected">Disciplinary</a>
                    <a href="@Url.Action("ProjectDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Project</a>
                    <a href="@Url.Action("ExperienceDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Experience</a>
                    <a href="@Url.Action("BondDetails", "EmployeeDetails", new { employeeId = ViewBag.EmployeeId })">Bond Details</a>
                }
            }
        </nav>
    </div>
    @using (Html.BeginForm("AddEmployeeDisciplines", "EmployeeDetails", FormMethod.Post, new { id = "frmAddEmployeeDisciplines" }))
    {
        @Html.HiddenFor(m => m.LoginUserId, new { id = "loginUserId" })
        @Html.HiddenFor(m => m.UserRole)
        @Html.HiddenFor(model => model.EmployeeId, new { @id = "hdnAddDisciplineDetailsEmployeeId" })
        @Html.HiddenFor(model => model.ManagerId, new { @id = "hdnAddDisciplineDetailsManagerId" })
        @Html.HiddenFor(model => model.DisciplineId, new { @id = "hdnAddDisciplineDetailsDisciplineId" })
        <div class="MainBody DisciplinaryMainbody">
            <div class="FormContainerBox Disciplinary clearfix" id ="disciplinaryDtls">
                <div id="divAddDisciplineDetails">
                    <h4>Add Disciplinary Issue</h4>
                    <div class="formrow clearfix">
                        <div class="leftcol clearfix">
                            <div class="LabelDiv">
                                * @Html.LabelFor(model => model.DisciplineSubject):
                            </div>
                            <div class="InputDiv">
                                @Html.EditorFor(model => model.DisciplineSubject)
                                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.DisciplineSubject)</p>
                                @Html.HiddenFor(model => model.DisciplineSubject, new { @id = "disciplineSubject" })
                            </div>
                        </div>
                        <div class="rightcol">
                            <div class="LabelDiv">
                                * @Html.LabelFor(model => model.Manager):
                            </div>
                            <div class="InputDiv">
                                @Html.DropDownListFor(model => model.Manager, new SelectList(Model.EmployeeManagerList, "EmployeeId", "EmployeeName", "Select"), "Select" ,new {@class = "ValidationDropDown"})
                                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.Manager)</p>
                                @Html.HiddenFor(model => model.Manager, new { @id = "manager" })
                            </div>
                        </div>
                    </div>

                    <div class="formrow clearfix">
                        <div class="leftcol clearfix">
                            <div class="LabelDiv">
                               * <label> Action date:</label>
                            </div>
                            <div class="InputDiv">
                                @Html.TextBoxFor(model => model.AddedDate, string.Format("{0: MM/dd/yyyy}", Model.AddedDate), new { @readonly = "readonly" })
                                <p class="qualif-detail">
                                    @Html.ValidationMessageFor(model => model.AddedDate)
                                </p>
                                @Html.HiddenFor(model => model.AddedDate, new { @id = "addedDate" })
                            </div>
                        </div>
                        <div class="rightcol">
                            <div class="LabelDiv">
                                * @Html.LabelFor(model => model.DisciplineMessage):
                            </div>
                            <div class="InputDiv">
                                @Html.TextAreaFor(model => model.DisciplineMessage, new { @id = "DisciplineMessage" })
                                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.DisciplineMessage)</p>
                                @Html.HiddenFor(model => model.DisciplineMessage, new { @id = "disciplineMessage" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="ButtonContainer1">
                <input type="button" value="Save" id="btnSaveDisciplinaryDetails" class="ButtonGray" style="visibility:hidden"  disabled="disabled" />
                @*<input id="cancel" type="button" value="Reset" class="ButtonGray " />*@
            </div>

            <div class="mrgnT33">
                <div class="tablestyle3" id="DesciplinaryDetailsContainer">
                    <table id="disciplinedetailsjqTable" class="scroll"></table>
                    <div id="disciplinedetailsjqTablePager"></div>
                </div>
            </div>
            <div id="DisplayDiscipline" style="display: none">
                @{Html.RenderPartial("_DisplayDisciplinaryDetails", Model);}
            </div>
        </div>
    }
            <div id="disciplineDetailsSuccessDialog" title="Discipline Details" style="display: none">
                <p>
                    Disciplinary Details have been saved.
                </p>
            </div>
            <div id="disciplineDetailsErrorDialog" title="Error" style="display: none">
                <p>
                    There are some errors.
                </p>
            </div>
            <div id="deleteRecordConfirmation" style="display: none">
                <p>
                    Are you sure you want to delete this record?
                </p>
            </div>
            <div id="DeleteRecord" style="display: none">
                <p>
                    Record has been Deleted
                </p>
            </div>
</section>