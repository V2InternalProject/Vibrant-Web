@model HRMS.Models.GenerateInvoiceModel
@{
    ViewBag.Title = "GenerateInvoice";
    Layout = "~/Views/Shared/_PersonalLayout.cshtml";
}
@*@section HeaderLinks{
        @Html.Partial("_HeaderLinks", Model.SearchedUserDetails)
    }*@
<link href="../../Content/New%20Design/pms.css" rel="stylesheet" type="text/css" />
<script src="../../Scripts/New%20Design/common.js" type="text/javascript"></script>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<section class="PMSContainer Container">
    <div class="FixedHeader">
        <div class="clearfix">
            <h2 class="MainHeading">
                Invoicing</h2>
        </div>
        <nav class="sub-menu-colored">
            @Html.HorizontalMenu(Session["PageLevelAccess"] as List<HRMS.Extensions.MenuModel>);
        </nav>
    </div>
    <div class="MainBody ProjectIndexbody">
        <div class="FormContainerBox clearfix ProjectIndexFliter genInvoice">
            <div class="CandidateLeftcol clearfix">
                <div class="leftcol">
                    <div class="formrow clearfix">
                        <div class="LabelDiv">
                            @Html.Label("Select Project:")
                        </div>
                        <div class="InputDiv">
                            @Html.DropDownListFor(x => x.InvoiceProjectID, new SelectList(Model.IRGeneratorProjectList, "Projectids", "ProjectName"), "Select", new { @id = "IRGeneratorProjectDD" })
                        </div>
                    </div>
                </div>
                @if (ViewBag.TextLink != "FinanceApproval")
                {
                    <div class="rightcol">
                        <div class="formrow clearfix">
                            <div class="LabelDiv">
                                @Html.Label("Sort By IR/PIR:")
                            </div>
                            <div class="InputDiv">
                                @Html.DropDownListFor(x => x.StageNameFilter, new SelectList(Model.NameList, "InvoiceName", "InvoiceName"), "Select", new { @id = "NameDD" })
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="CandidateRightcol clearfix">
                <div class="leftcol">
                    <div class="formrow clearfix">
                        <div class="LabelDiv spaceIndent">
                            @Html.Label("Type:")
                        </div>
                        <div class="InputDiv">
                            @Html.DropDownListFor(x => x.TypeID, new SelectList(Model.TypeList, "TypeID", "TypeName"), "Select", new { @id = "InvoiceTypeDD" })
                        </div>
                    </div>
                </div>
                <div class="rightcol">
                    <div class="formrow clearfix">
                        <div class="LabelDiv spaceIndent">
                            @Html.Label("Stage:")
                        </div>
                        <div class="InputDiv">
                            @Html.DropDownListFor(x => x.StageNameFilter, new SelectList(Model.StageList, "StageName", "StageName"), "Select", new { @id = "StageDD" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix">
            <div class="ButtonContainer2 clearfix">
                <input id="AddInvoiceBtn" type="button" value="Add New IR/PIR" class="ButtonGray mrgnR8" />
                <input id="CopyInvoiceBtn" type="button" value="Copy Record" class="ButtonGray" />
            </div>
            <h4 class="SmallHead">
                Inbox
            </h4>
            <div class="tablestyle3">
                <table id="jqInvoiceInboxTable">
                </table>
            </div>
            <div id="jqInvoiceInboxTablePager">
            </div>
            <h4 class="SmallHead">
                Watch List
            </h4>
            <div class="tablestyle3 mrgnT20">
                <table id="jqInvoiceWLTable">
                </table>
            </div>
            <div id="jqInvoiceWLTablePager">
            </div>
        </div>
        <div id="NoProjectSelectFromInbox" title="Generate Invoice" style="display: none">
            <p>
                Please select Project from Inbox.
            </p>
        </div>
        <div id="NoProjectSelectDialog" title="Generate Invoice" style="display: none">
            <p>
                Please select Project to add new IR/PIR.
            </p>
        </div>
        <div id="NoCurrencyExistDialog" title="Generate Invoice" style="display: none">
            <p>
                Please add project Currency for selected project.
            </p>
        </div>
        <div id="NoIRApproverExistDialog" title="Generate Invoice" style="display: none">
            <p>
                Please add atleast one IR Approver for selected project.
            </p>
        </div>
        <div id="NoIRFinanceApproverExistDialog" title="Generate Invoice" style="display: none">
            <p>
                Please add atleast one IR Finance Approver for selected project.
            </p>
        </div>
        <div id="PopUpOfInvoiceDetails" style="display: none;">
            <ul class="exitbutton">
                <li id="btnFillFormInvoice" style="display: none;">Fill IR/PIR</li>
                <li id="btnShowDetailsInvoice" style="display: none;">View Details</li>
                <li id="btnShowStatusInvoice" style="display: none;">View Status</li>
            </ul>
            <table>
                <tr style="display: none;">
                    <td>
                        <span id="RFIIDToPassOnLinkClick" style="display: none;"></span>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</section>
@using (@Html.BeginForm("", "", FormMethod.Post, new { @id = "generateInvoiceForm" }))
{
    @Html.HiddenFor(x => x.SelectedProjectID)
}
<div id="InvoiceShowStatusDialog" style="display: none; clear: both">
    @{Html.RenderPartial("_InvoiceShowStatus", Model);}
</div>
<script type="text/javascript">
    $(document).click(function (e) {
        if (!$(e.target).is('.EmpLink')) {
            $("#PopUpOfInvoiceDetails").fadeOut();
        }
    });
    $(document).ready(function () {
        if ('@ViewBag.TextLink' == 'IRApproval' || '@ViewBag.TextLink' == 'FinanceApproval') {
            $('#AddInvoiceBtn').hide();
            $('#CopyInvoiceBtn').hide();
        }
        isCurrencyExist = false;
        isIRApproverExist = false;
        isIRFinanceApproverExist = false;
        //        selectedProjectID = 0;
        selectedName = "";
        selectedStage = "";
        selectedTypeID = "";
        SelectedIP = "";
        SelectedProjectId = "";
        $("#jqInvoiceInboxTable").jqGrid({ // inbox
            // Ajax related configurations
            url: '@Url.Action("InvoiceInboxWatchListLoadGrid", "Invoice")',
            postData: { TextLink: function () { return '@ViewBag.TextLink' }, ProjectID: function () { return $("#generateInvoiceForm #SelectedProjectID").val() }, LoggedUserName: function () { return '@Model.UserName' }, InvoiceTypeID: function () { return selectedTypeID }, InvoiceName: function () { return selectedName }, InvoiceStage: function () { return selectedStage }, GridName: function () { return "GenerateInvoiceInbox" } },
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["", "IR/PIR ID", "Project", "Customer", "IR/PIR", "Type", "Raised On", "Currency", "Amount", "Equivalent Currency Amount", "Amount <br /> (Corporate Base)", "Stage"],
            // Configure the columns
            colModel: [
                { name: "ProjectID", index: "ProjectID", align: "left", width: 120, editable: true, hidden: true },
                { name: "RFIID", index: "RFIID", align: "left", width: 40, formatter: invoiceLink },
                { name: "ProjectName", index: "ProjectName", align: "left", width: 60 },
                { name: "CustomerName", index: "CustomerName", align: "left", width: 60 },
                { name: "InvoiceName", index: "InvoiceName", align: "left", width: 60, formatter: GetInvoiceName },
                { name: "RFIType", index: "RFIType", align: "left", width: 60 },
                { name: "RFIRaisedOn", index: "RFIRaisedOn", align: "left", width: 60, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "CurrencyName", index: "CurrencyName", align: "left", width: 60 },
                { name: "Amount", index: "Amount", align: "left", width: 50, sorttype: "int" },
                { name: "EquivalentCurrencyAmount", index: "EquivalentCurrencyAmount", align: "left", width: 80, sorttype: "int" },
                { name: "CorporateBaseAmount", index: "CorporateBaseAmount", align: "left", width: 80, sorttype: "int" },
                { name: "InvoiceStage", index: "InvoiceStage", align: "left", width: 90 },
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqInvoiceInboxTablePager"),
            rowNum: 5,
            rowList: [5, 10, 20],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            // Default sorting
            loadonce: true,
            //sortname: "",
            //sortorder: "asc",
            // Grid caption
            //caption: "Inbox",
            gridComplete: function () {
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                SelectedIP = rowData["RFIID"];
                SelectedProjectId = rowData["ProjectID"];
            }
        }).navGrid("#jqInvoiceInboxTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

        $("#jqInvoiceWLTable").jqGrid({ // WL
            // Ajax related configurations
            url: '@Url.Action("InvoiceInboxWatchListLoadGrid", "Invoice")',
            postData: { TextLink: function () { return '@ViewBag.TextLink' }, ProjectID: function () { return $("#generateInvoiceForm #SelectedProjectID").val() }, LoggedUserName: function () { return '@Model.UserName' }, InvoiceTypeID: function () { return selectedTypeID }, InvoiceName: function () { return selectedName }, InvoiceStage: function () { return selectedStage }, GridName: function () { return "GenerateInvoiceWatchList" } },
            datatype: "json",
            mtype: "POST",
            // Specify the column names
            colNames: ["", "IR/PIR ID", "Project", "Customer", "IR/PIR", "Type", "Raised On", "Currency", "Amount", "Equivalent Currency Amount", "Amount <br /> (Corporate Base)", "Stage"],
            // Configure the columns
            colModel: [
                { name: "ProjectID", index: "ProjectID", align: "left", width: 120, editable: true, hidden: true },
                { name: "RFIID", index: "RFIID", align: "left", width: 40, formatter: invoiceLink },
                { name: "ProjectName", index: "ProjectName", align: "left", width: 60 },
                { name: "CustomerName", index: "CustomerName", align: "left", width: 60 },
                { name: "InvoiceName", index: "InvoiceName", align: "left", width: 60, formatter: GetInvoiceName },
                { name: "RFIType", index: "RFIType", align: "left", width: 60 },
                { name: "RFIRaisedOn", index: "RFIRaisedOn", align: "left", width: 60, formatter: 'date', formatoptions: { newformat: 'm/d/Y'} },
                { name: "CurrencyName", index: "CurrencyName", align: "left", width: 60 },
                { name: "Amount", index: "Amount", align: "left", width: 50,sorttype:"int" },
                { name: "EquivalentCurrencyAmount", index: "EquivalentCurrencyAmount", align: "left", width: 80, sorttype: "int" },
                { name: "CorporateBaseAmount", index: "CorporateBaseAmount", align: "left", width: 80, sorttype: "int" },
                { name: "InvoiceStage", index: "InvoiceStage", align: "left", width: 90 },
            ],
            // Grid total width and height
            width: 700,
            // Paging
            toppager: false,
            jsonReader: { repeatitems: false },
            pager: $("#jqInvoiceWLTablePager"),
            rowNum: 5,
            rowList: [5, 10, 20],
            viewrecords: true, // Specify if "total number of records" is displayed
            height: 'auto',
            autowidth: false,
            // Default sorting
            loadonce: true,
            //sortname: "",
            //sortorder: "asc",
            // Grid caption
            //caption: "Watchlist",
            gridComplete: function () {
            },
            onCellSelect: function (rowid, iCol) {
                var rowData = $(this).getRowData(rowid);
                SelectedIP = rowData["RFIID"];
                SelectedProjectId = rowData["ProjectID"];
            }
        }).navGrid("#jqInvoiceWLTablePager",
            { search: false, refresh: false, add: false, edit: false, del: false },
            {}, // settings for edit
            {},
            {}
        );

    });

    $("#CopyInvoiceBtn").click(function () {
        if (SelectedIP != "undefined") {
            var matches = [];
            var t = SelectedIP.match(/\d+\.?\d*/g);
            var Rid = t[0];
            $.ajax({
                url: "GetAlternateId/Invoice",
                type: 'POST',
                async: false,
                data: { RFIID: Rid, LoggedInEmployeeId: '@Model.SearchedUserDetails.EmployeeId' },
                success: function (results) {
                    if (results.NewRFid != "") {
                        window.location.href = '@Url.Action("AddInvoice", "Invoice")?RFIID=' + results.NewRFid + '&ProjectID=' + SelectedProjectId + '&textLink=IRGenerator';
                    }
                },
                error: function (results) {
                    DisplayErrorDialog();
                }
            });
        } else {
            $("#NoProjectSelectFromInbox").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
	            {
	                "Ok": function () {
	                    $(this).dialog("close");
	                }
	            }
            });
        }
    });

    $("#AddInvoiceBtn").click(function () {
        if ($("#generateInvoiceForm #SelectedProjectID").val() == 0) {
            $("#NoProjectSelectDialog").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
	            {
	                "Ok": function () {
	                    $(this).dialog("close");
	                }
	            }
            });
        }
        else if (isCurrencyExist == false) {
            $("#NoCurrencyExistDialog").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
	            {
	                "Ok": function () {
	                    $(this).dialog("close");
	                }
	            }
            });
        }
        else if (isIRApproverExist == false) {
            $("#NoIRApproverExistDialog").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
        	    {
        	        "Ok": function () {
        	            $(this).dialog("close");
        	        }
        	    }
            });
        }
        else if (isIRFinanceApproverExist == false) {
            $("#NoIRFinanceApproverExistDialog").dialog({
                modal: true,
                resizable: false,
                height: 140,
                width: 300,
                dialogClass: "noclose",
                buttons:
        	    {
        	        "Ok": function () {
        	            $(this).dialog("close");
        	        }
        	    }
            });
        }
        else {
            window.location.href = '@Url.Action("AddInvoice", "Invoice")?RFIID=0&ProjectID=' + $("#generateInvoiceForm #SelectedProjectID").val() + '&textLink=' + '@ViewBag.TextLink' + '&viewDetails=NewForm';
        }
    });

    $("#IRGeneratorProjectDD").change(function () {
        if ($('#IRGeneratorProjectDD :selected').val() == "")
            $("#generateInvoiceForm #SelectedProjectID").val(0);
        else
            $("#generateInvoiceForm #SelectedProjectID").val($('#IRGeneratorProjectDD :selected').val());
        $("#jqInvoiceInboxTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
        $("#jqInvoiceWLTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");

        if ($("#generateInvoiceForm #SelectedProjectID").val() == "") {
            $("#generateInvoiceForm #SelectedProjectID").val(0);
        }
        else {
            $.ajax({
                url: "GetSelectedProjectDetails/Invoice",
                type: 'POST',
                async: false,
                data: { ProjectID: $("#generateInvoiceForm #SelectedProjectID").val() },
                success: function (results) {
                    isCurrencyExist = results.isCurrencyExist;
                    isIRApproverExist = results.isIRApproverExist;
                    isIRFinanceApproverExist = results.isIRFinanceApproverExist;
                },
                error: function (results) {
                    DisplayErrorDialog();
                }
            });
        }

    });

    $("#NameDD").change(function () {
        selectedName = $('#NameDD :selected').val();
        $("#jqInvoiceInboxTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
        $("#jqInvoiceWLTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
    });

    $("#StageDD").change(function () {
        selectedStage = $('#StageDD :selected').val();
        $("#jqInvoiceInboxTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
        $("#jqInvoiceWLTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
    });

    $("#InvoiceTypeDD").change(function () {
        selectedTypeID = $('#InvoiceTypeDD :selected').val();
        $("#jqInvoiceInboxTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
        $("#jqInvoiceWLTable").jqGrid("setGridParam", { datatype: "json" }).trigger("reloadGrid");
    });

    function GetInvoiceName(cellvalue, options, rowobject) {
        if (cellvalue == "True")
            return "PIR";
        else if (cellvalue == "False")
            return "IR";
    }

    function invoiceLink(cellvalue, options, rowobject) {
        return "<a href=# id=" + rowobject['RFIID'] + " class=EmpLink onClick = InvoiceLinkClick(this," + rowobject['ProjectID'] + ") class=EmployeeNameLink >" + cellvalue + "</a>";
    }

    function InvoiceLinkClick(event, projectID) {
        $("#generateInvoiceForm #SelectedProjectID").val(projectID);
        var target = event.id;
        var width = event.offsetWidth;
        var table = $("#" + target).parent().parent().parent().parent();
        var tableid = $(table).attr('id');
        if (tableid == undefined) {
            tableid = $(table).find('table').attr('id');
        }

        if (tableid == "jqInvoiceInboxTable") {
            $('#btnFillFormInvoice').show();
            $('#btnShowStatusInvoice').show();
            $('#btnShowDetailsInvoice').hide();
        }

        if (tableid == "jqInvoiceWLTable") {
            $('#btnFillFormInvoice').hide();
            $('#btnShowDetailsInvoice').show();
            $('#btnShowStatusInvoice').show();
        }

        var positionlink = $("#" + target).offset();

        $("#PopUpOfInvoiceDetails").css({
            top: positionlink.top,
            left: positionlink.left + width + 4,
            position: "fixed"
        }).fadeIn();

        $('#RFIIDToPassOnLinkClick').val(target);
    }

    $("#btnFillFormInvoice").click(function () {
        window.location.href = '@Url.Action("AddInvoice", "Invoice")?RFIID=' + $("#RFIIDToPassOnLinkClick").val() + '&ProjectID=' + $("#generateInvoiceForm #SelectedProjectID").val() + '&textLink=' + '@ViewBag.TextLink';
    });

    $('#btnShowDetailsInvoice').click(function () {
        window.location.href = '@Url.Action("AddInvoice", "Invoice")?RFIID=' + $("#RFIIDToPassOnLinkClick").val() + '&ProjectID=' + $("#generateInvoiceForm #SelectedProjectID").val() + '&viewDetails=' + 'yes&textLink=' + '@ViewBag.TextLink';
    });

    $("#btnShowStatusInvoice").click(function () {
        jQuery("#InvoiceShowStatusTable").trigger("reloadGrid");
        $('#InvoiceShowStatusDialog').dialog({
            autoOpen: true,
            modal: true,
            width: 1000,
            resizable: true,
            title: "Show Status"
        });
    });
</script>