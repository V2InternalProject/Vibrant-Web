@model HRMS.Models.ContactDetailsViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script src="@Url.Content("../../Scripts/PersonalDetails/_ContactDetails.js")" type="text/javascript"></script>
<script src="../../Scripts/Global.min.js" type="text/javascript"></script>
<script type="text/javascript">
	$.ajaxSetup({
		// Disable caching of AJAX responses
		cache: false
	});
	$(document).ready(function () {
	    if ($('#UserRole').val() != '@HRMS.Models.UserRoles.HRAdmin') {
	        $("#frmAddEmergencyContactDetails :input").attr("disabled", true);
	    }

	    $('#frmemergencycontact').submit(function () {
	        var travelid = '@Model.TravelId';
	        if ($(this).valid()) {
	            DisplayLoadingDialog(); // Checked global.js
	            $.ajax({
	                url: '@Url.Action("AddEmployeeEmergencyContact", "PersonalDetails")',
	                type: 'POST',
	                data: $('#frmemergencycontact').serialize(),
	                success: function (results) {
	                    $("#loading").dialog("close");
	                    $("#loading").dialog("destroy");
	                    if (results.status == true) {

	                        $('#dialogActionEmergencyContact').dialog('close');
	                        jQuery("#jqEmergencyContactTable").trigger("reloadGrid");
	                        $("#AddEmergencyContactSuccessMessege").dialog({
	                            resizable: false,
	                            height: 140,
	                            width: 300,
	                            modal: true,
	                            title: 'Emergency Contact Details',
	                            buttons: {
	                                Ok: function () {
	                                    $(this).dialog("close");
	                                }
	                            }
	                        });

	                    } // if close
	                    else if (results.status == "Error") {

	                        $('#dialogActionEmergencyContact').dialog('close');
	                        $("#errorDialog").dialog({
	                            resizable: false,
	                            height: 'auto',
	                            width: 'auto',
	                            modal: true,
	                            title: 'Contact Details',
	                            buttons: {
	                                Ok: function () {
	                                    $(this).dialog("close");
	                                    jQuery("#jqEmergencyContactTable").trigger("reloadGrid");
	                                }
	                            }
	                        }); //end dialog
	                    }
	                    else {
	                        $("#loading").dialog("close");
	                        $("#loading").dialog("destroy");
	                        $('#dialogActionEmergencyContact').dialog('close');
	                        $("#AddEmergencyContactErrorMessege").dialog({
	                            resizable: false,
	                            height: 140,
	                            width: 300,
	                            modal: true,
	                            title: 'Contact Details',
	                            buttons: {
	                                Ok: function () {

	                                    $(this).dialog("close");
	                                    jQuery("#jqEmergencyContactTable").trigger("reloadGrid");
	                                }
	                            }
	                        }); //dialog close
	                    } //else close
	                } //success close
	            }); //ajax close
	        } //if close
	        return false;
	    });  //AddEmergencyContactDetails submit event close
	});
</script>

@using (@Html.BeginForm("", "", FormMethod.Post, new { id = "frmemergencycontact" }))
{
    <div class="mrgnT25">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.TravelId)
        @Html.HiddenFor(m => m.EmergencyContactModel.EmployeeId)
        @Html.HiddenFor(model => model.EmergencyContactModel.EmployeeEmergencyContactId, new { @id = "EmergencyDetails_id" })
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.LabelFor(model => model.EmergencyContactModel.Name):
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(model => model.EmergencyContactModel.Name, new { @id = "EmergencyDetails_Name" })
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.EmergencyContactModel.Name)
                @Html.HiddenFor(model => model.EmergencyContactModel.Name, new { @id = "EmergencyDetails_name" })</p>
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.LabelFor(model => model.EmergencyContactModel.EmgAddress):
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextAreaFor(model => model.EmergencyContactModel.EmgAddress, new { @id = "EmergencyDetails_Address" })
                <p class="qualif-detail">@Html.HiddenFor(model => model.EmergencyContactModel.EmgAddress, new { @id = "EmergencyDetails_address" })
                @Html.ValidationMessageFor(model => model.EmergencyContactModel.EmgAddress)</p>
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
                @Html.LabelFor(model => model.EmergencyContactModel.EmailId):
            </div>
            <div class="editor-field fieldwidth floatL ">
                @Html.TextBoxFor(model => model.EmergencyContactModel.EmailId, new { @id = "EmergencyDetails_EmailId" })
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.EmergencyContactModel.EmailId)
                @Html.HiddenFor(model => model.EmergencyContactModel.EmailId, new { @id = "EmergencyDetails_emailId" })</p>
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.LabelFor(model => model.EmergencyContactModel.ContactNo):
            </div>
            <div class="editor-field fieldwidth floatL ">

                @Html.TextBoxFor(model => model.EmergencyContactModel.ContactNo, new { @id = "EmergencyDetails_ContactNo" })
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.EmergencyContactModel.ContactNo)

                @Html.HiddenFor(model => model.EmergencyContactModel.ContactNo, new { @id = "EmergencyDetails_contactNo" })</p>
                 <span class="float-left">e.g.(+44 (0161) 8721661/408.550.2340/+91-22-66733201)</span>
            </div>
        </div>
        <div class="formcol clearfix">
            <div class="editor-label labelwidth floatL">
               <span class="mandatory">*</span> @Html.Label("Relation"):
            </div>
            <div class="editor-field fieldwidth floatL">
                @Html.DropDownListFor(model => model.EmergencyContactModel.uniqueID, new SelectList(ViewBag.RelationTypeList, "uniqueID", "Relation", "Select"), "Select", new { @id = "EmergencyDetails_Relationship" })
                @Html.HiddenFor(model => model.EmergencyContactModel.uniqueID, new { @id = "EmergencyDetails_relationship" })
                <p class="qualif-detail">@Html.ValidationMessageFor(model => model.EmergencyContactModel.uniqueID, "Please Select Relation")</p>
            </div>
        </div>
        <div class="clear popup_button ">
            <div class="floatR">
                <input id="btnSaveContact" type="submit" value="Save" class="button mrgnR5" />
                <input id="ResetEmgContact" type="button" value="Reset" onclick="resetcontact()"
                    class="button " />
            </div>
        </div>
        <div id="AddEmergencyContactSuccessMessege" style="display: none">
            <p>
                Emergency contact Details have been saved.</p>
        </div>
        <div id="AddEmergencyContactErrorMessege" style="display: none">
            <p>
                There are some errors</p>
        </div>
    </div>
}